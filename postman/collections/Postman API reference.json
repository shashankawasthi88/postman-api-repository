{
	"info": {
		"_postman_id": "be72e0c4-2fd9-4704-9275-a49b7ccec213",
		"name": "Postman API reference",
		"description": "The Postman API allows you to programmatically access data stored in Postman account with ease.\n\nThe easiest way to get started with the API is to click the **fork** button to fork this collection to your own workspace and use Postman to send requests.\n\n\n# Overview\n\n1. You need a valid <a href=\"#authentication\">API Key</a> to send requests to the API endpoints. You can get your key from the [integrations dashboard](https://go.postman.co/settings/me/api-keys).\n\n1. The API has an access <a href=\"#rate-limits\">rate limit</a> applied to it.\n\n1. The Postman API will only respond to secured communication done over HTTPS. HTTP requests will be sent a `301` redirect to corresponding HTTPS resources.\n\n1. Response to every request is sent in [JSON format](https://en.wikipedia.org/wiki/JSON). In case the API request results in an error, it is represented by an `\"error\": {}` key in the JSON response.\n\n1. The request method (verb) determines the nature of action you intend to perform. A request made using the `GET` method implies that you want to fetch something from Postman, and `POST` implies you want to save something new to Postman.\n\n1. The API calls will respond with appropriate [HTTP status codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) for all requests. Within Postman Client, when a response is received, the status code is highlighted and is accompanied by a help text that indicates the possible meaning of the response code. A `200 OK` indicates all went well, while `4XX` or `5XX` response codes indicate an error from the requesting client or our API servers respectively.\n\n1. Individual resources in your Postman Account is accessible using its unique id (`uid`). The `uid` is a simple concatenation of the resource owner's user-id and the resource-id. For example, a collection's `uid` is `{{owner_id}}-{{collection_id}}`.\n\n# Authentication\n\nAn API Key is required to be sent as part of every request to the Postman API, in the form of an `X-Api-Key` request header.\n\n> If you do not have an API Key, you can easily generate one by heading over to the [Postman Integrations Dashboard](https://go.postman.co/integrations/services/pm_pro_api).\n\nAn API Key tells our API server that the request it received came from you. Everything that you have access to in Postman is accessible with an API Key that is generated by you.\n\nFor ease of use inside Postman, you could store your API key in an [environment variable](https://www.getpostman.com/docs/environments) called `postman_api_key` and this [Collection](https://www.getpostman.com/docs/collections) will automatically use it to make API calls.\n\n## API Key related error response\n\nIf an API Key is missing, malformed, or invalid, you will receive a `401 Unauthorised` response code and the following JSON response:\n\n```\n{\n  \"error\": { \n    \"name\": \"AuthenticationError\",\n    \"message\": \"API Key missing. Every request requires an API Key to be sent.\"\n  }\n}\n```\n\n## Using the API Key as a query parameter\n\nEvery request that accepts API Key as `X-Api-Key` request header, also accepts the key when sent as `apikey` URL query parameter.\n\nAPI key sent as part of the header has a higher priority in case you send the key using both request header and query parameter.\n\n\n# Rate Limits\n\nAPI access rate limits are applied at a per-key basis in unit time. Access to the API using a key is limited to **60 requests per minute**. In addition, every API response is accompanied by the following set of headers to identify the status of your consumption.\n\n\n| Header                  | Description |\n|-------------------------|-------------|\n| `X-RateLimit-Limit`     | The maximum number of requests that the consumer is permitted to make per minute. |\n| `X-RateLimit-Remaining` | The number of requests remaining in the current rate limit window. |\n| `X-RateLimit-Reset`     | The time at which the current rate limit window resets in UTC epoch seconds. |\n\n\nOnce you hit the rate limit, you will receive a response similar to the following JSON, with a status code of `429 Too Many Requests`.\n\n```json\n{\n  \"error\": {\n    \"name\": \"rateLimitError\",\n    \"message\": \"Rate Limit exceeded. Please retry at 1465452702843\"\n  }\n}\n```\n\n\n# Support\n\nFor help regarding accessing the Postman API, feel free to discuss it in our [Discourse Community](https://community.getpostman.com). You can also drop in a line at [help@getpostman.com](mailto:help@getpostman.com).\n\nIn the event you receive a `503` response from our servers, it implies that we have hit an unexpected spike in API access traffic and would usually be operational within the next 5 minutes. If the outage persists, or your receive any other form of `5XX` error, kindly let us know.\n\n\n# Terms of Use\n\nFor information on API terms of use and privacy, refer to our terms at [http://postman.com/legal/terms/](http://postman.com/legal/terms/) and our privacy policy at [https://www.postman.com/legal/privacy-policy/](https://www.postman.com/legal/privacy-policy/).\n\n\n# API Reference",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "812959-be72e0c4-2fd9-4704-9275-a49b7ccec213"
	},
	"item": [
		{
			"name": "apis",
			"item": [
				{
					"name": "{api Id}",
					"item": [
						{
							"name": "versions",
							"item": [
								{
									"name": "{api Version Id}",
									"item": [
										{
											"name": "relations",
											"item": [
												{
													"name": "Get linked relations",
													"id": "2a2ed35c-9d3c-4d7e-a942-a2ceb94d4334",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions",
																":apiVersionId",
																"relations"
															],
															"variable": [
																{
																	"key": "apiId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																},
																{
																	"key": "apiVersionId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																}
															]
														},
														"description": "This call fetches all the relations which are linked to the specified API version along with their details.\n\nThe response will contain a `relations` object which lists all the relation types which are linked to the API version. Each of the relation type will be an object which details the relations of this type. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
													},
													"response": [
														{
															"id": "a1ea9bd6-494f-45cb-a8b5-5a4cc0f6abf5",
															"name": "Get linked relations for an API version",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/relations",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"versions",
																		":apiVersionId",
																		"relations"
																	],
																	"variable": [
																		{
																			"key": "apiId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		},
																		{
																			"key": "apiVersionId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"relations\": {\n    \"contracttest\": {\n      \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\": {\n        \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n        \"name\": \"C test\",\n        \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n      }\n    },\n    \"integrationtest\": {\n      \"521b0486-ab91-4d3a-9189-43c9380a0533\": {\n        \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n        \"name\": \"C1\",\n        \"updatedAt\": \"2019-08-29T11:40:39.000Z\"\n      },\n      \"a236b715-e682-460b-97b6-c1db24f7612e\": {\n        \"id\": \"a236b715-e682-460b-97b6-c1db24f7612e\",\n        \"name\": \"C test\",\n        \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n      }\n    },\n    \"mock\": {\n      \"4ccd755f-2c80-481b-a262-49b55e12f5e1\": {\n        \"id\": \"4ccd755f-2c80-481b-a262-49b55e12f5e1\",\n        \"name\": \"Mock\",\n        \"updatedAt\": \"2019-08-20T10:18:13.000Z\",\n        \"url\": \"https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io\"\n      }\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "Create relations",
													"id": "55cca3b5-03cd-4d62-a966-1fbb7bfe7d2e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contracttest\": [\n    \"collection-uid-1\"\n  ],\n  \"documentation\": [\n    \"collection-uid-3\"\n  ],\n  \"mock\": [\n    \"mock-uid-1\"\n  ],\n  \"testsuite\": [\n    \"collection-uid-1\",\n    \"collection-uid-2\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions",
																":apiVersionId",
																"relations"
															],
															"variable": [
																{
																	"key": "apiId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																},
																{
																	"key": "apiVersionId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																}
															]
														},
														"description": "This call allows you to add existing Postman entities as new relations to an API. The request body should contain the relations to be created along with an array of entity IDs. \n\n<table>\n  <tr>\n    <th>Relation</th>\n    <th>Entity ID type</th>\n  <tr>\n  <tr>\n    <td>contracttest</td>\n    <td>Collection UIDs</td>\n  </tr>\n  <tr>\n    <td>integrationtest</td>\n    <td>Collection UIDs</td>\n  </tr>\n  <tr>\n    <td>documentation</td>\n    <td>Collection UIDs</td>\n  </tr>\n  <tr>\n    <td>testsuite</td>\n    <td>Collection UIDs</td>\n  </tr>\n  <tr>\n    <td>environment</td>\n    <td>Environment UIDs</td>\n  </tr>\n  <tr>\n    <td>mock</td>\n    <td>Mock IDs</td>\n  </tr>\n  <tr>\n    <td>monitor</td>\n    <td>Monitor IDs</td>\n  </tr>\n</table>\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
													},
													"response": [
														{
															"id": "8ccd0903-9c0a-439b-b62a-d2af7fb1f505",
															"name": "Create multiple relations from existing collections",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"contracttest\": [\n    \"collection-uid-1\"\n  ],\n  \"documentation\": [\n    \"collection-uid-3\"\n  ],\n  \"mock\": [\n    \"mock-uid-1\"\n  ],\n  \"testsuite\": [\n    \"collection-uid-1\",\n    \"collection-uid-2\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/relations",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"versions",
																		":apiVersionId",
																		"relations"
																	],
																	"variable": [
																		{
																			"key": "apiId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		},
																		{
																			"key": "apiVersionId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"contracttest\": [\n    \"5bcece87-ca4b-4e75-a967-2a6845626164\"\n  ],\n  \"documentation\": [\n    \"2084eba6-a17b-4751-8f03-ea60f30ba19c\"\n  ],\n  \"testsuite\": [\n    \"e525fa71-035e-4620-acda-ce878524f1e7\",\n    \"17a974b2-ce79-4b95-9d3f-217d6ff7e979\"\n  ]\n}"
														}
													]
												}
											],
											"id": "00125702-ef36-47d4-a6fc-00f1c900c389"
										},
										{
											"name": "schemas",
											"item": [
												{
													"name": "{schema Id}",
													"item": [
														{
															"name": "Get Schema",
															"id": "3a8fac48-fb00-4c39-ae91-8d345494f7f7",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/schemas/:schemaId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"versions",
																		":apiVersionId",
																		"schemas",
																		":schemaId"
																	],
																	"variable": [
																		{
																			"key": "apiId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		},
																		{
																			"key": "apiVersionId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		},
																		{
																			"key": "schemaId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "This call fetches a single schema having the specified id.\n\nResponse contains a `schema` object with all the details related to the schema, namely, `id`, `language`, `type`, `schema` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
															},
															"response": [
																{
																	"id": "9db11147-4ba3-4708-909b-6823044eab8f",
																	"name": "Get schema",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/schemas/:schemaId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"apis",
																				":apiId",
																				"versions",
																				":apiVersionId",
																				"schemas",
																				":schemaId"
																			],
																			"variable": [
																				{
																					"key": "apiId",
																					"value": "cillum tempor irure deserunt mo",
																					"description": "(Required) "
																				},
																				{
																					"key": "apiVersionId",
																					"value": "cillum tempor irure deserunt mo",
																					"description": "(Required) "
																				},
																				{
																					"key": "schemaId",
																					"value": "cillum tempor irure deserunt mo",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"schema\": {\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"type\": \"openapi3\",\n    \"updateBy\": \"5665\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}"
																}
															]
														},
														{
															"name": "Update Schema",
															"id": "2e09b611-f280-454a-8d81-391d3a61a9f3",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"schema\": {\n    \"language\": \"json\",\n    \"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": null,\\n  \\\"version\\\": \\\"v1.0\\\",\\n  \\\"title\\\": \\\"API\\\",\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://localhost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"Returns details about a particular user\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"tags\\\": [\\n          \\\"user\\\"\\n        ],\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"description\\\": \\\"ID of the user\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Details about a user by ID\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"\\\\\\\\'#/components/schemas/User\\\\\\\\'\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"Unexpected error\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"\\\\\\\\'#/components/schemas/Error\\\\\\\\'\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n    \"type\": \"openapi3\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/schemas/:schemaId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"versions",
																		":apiVersionId",
																		"schemas",
																		":schemaId"
																	],
																	"variable": [
																		{
																			"key": "apiId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		},
																		{
																			"key": "apiVersionId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		},
																		{
																			"key": "schemaId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "This call updates an existing schema.\n\nRequest body should contain a `schema` object which should atleast have these properties with `string` values:\n\n- **`type`**: Allowed types are `openapi3`, `openapi2`, `openapi1`, `raml` and `graphql`.\n- **`language`** : Allowed languages are `json` and `yaml` for OpenAPI and RAML schema types. GraphQL schema type accepts only `graphql` language.\n- **`schema`**: Optional. If passed, must be the content of the schema as a `string`.\n\nResponse contains a `schema` object with all the details related to the created schema, namely, `id`, `language`, `type` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
															},
															"response": [
																{
																	"id": "5f3d15d1-7aa7-472f-aa9f-2ee9ed007398",
																	"name": "Update schema",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"schema\": {\n    \"language\": \"json\",\n    \"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": null,\\n  \\\"version\\\": \\\"v1.0\\\",\\n  \\\"title\\\": \\\"API\\\",\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://localhost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"Returns details about a particular user\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"tags\\\": [\\n          \\\"user\\\"\\n        ],\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"description\\\": \\\"ID of the user\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Details about a user by ID\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"\\\\\\\\'#/components/schemas/User\\\\\\\\'\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"Unexpected error\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"\\\\\\\\'#/components/schemas/Error\\\\\\\\'\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n    \"type\": \"openapi3\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/schemas/:schemaId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"apis",
																				":apiId",
																				"versions",
																				":apiVersionId",
																				"schemas",
																				":schemaId"
																			],
																			"variable": [
																				{
																					"key": "apiId",
																					"value": "cillum tempor irure deserunt mo",
																					"description": "(Required) "
																				},
																				{
																					"key": "apiVersionId",
																					"value": "cillum tempor irure deserunt mo",
																					"description": "(Required) "
																				},
																				{
																					"key": "schemaId",
																					"value": "cillum tempor irure deserunt mo",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"schema\": {\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"type\": \"openapi3\",\n    \"updateBy\": \"5665\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}"
																}
															]
														},
														{
															"name": "Create collection from schema",
															"id": "6686175d-5440-48ed-9c65-129f72d92e8b",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"My generated collection\",\n  \"relations\": [\n    {\n      \"type\": \"contracttest\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/schemas/:schemaId/collections?workspace=c90a3482-f80d-43d6-9dfb-0830f5e43605",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"versions",
																		":apiVersionId",
																		"schemas",
																		":schemaId",
																		"collections"
																	],
																	"query": [
																		{
																			"key": "workspace",
																			"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605"
																		}
																	],
																	"variable": [
																		{
																			"key": "apiId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		},
																		{
																			"key": "apiVersionId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		},
																		{
																			"key": "schemaId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "This call creates a collection and links it to an API as one or multiple relations. \n\nRequest body requires two keys:\n- `name` - Name of the collection to be created.\n- `relations` - A list of relation(s) to be created.\n\nThe allowed relation types are `contracttest`, `integrationtest`, `testsuite`, and `documentation`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
															},
															"response": [
																{
																	"id": "38e0fa38-740b-458a-8c64-eda0bb12a94f",
																	"name": "Create collection from schema",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"My generated collection\",\n  \"relations\": [\n    {\n      \"type\": \"contracttest\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/schemas/:schemaId/collections?workspace=c90a3482-f80d-43d6-9dfb-0830f5e43605",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"apis",
																				":apiId",
																				"versions",
																				":apiVersionId",
																				"schemas",
																				":schemaId",
																				"collections"
																			],
																			"query": [
																				{
																					"key": "workspace",
																					"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605"
																				}
																			],
																			"variable": [
																				{
																					"key": "apiId",
																					"value": "cillum tempor irure deserunt mo",
																					"description": "(Required) "
																				},
																				{
																					"key": "apiVersionId",
																					"value": "cillum tempor irure deserunt mo",
																					"description": "(Required) "
																				},
																				{
																					"key": "schemaId",
																					"value": "cillum tempor irure deserunt mo",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"collection\": {\n    \"id\": \"e6b0d46a-8722-4f42-ab86-f5f473187ddf\",\n    \"uid\": \"112098-e6b0d46a-8722-4f42-ab86-f5f473187ddf\"\n  },\n  \"relations\": [\n    {\n      \"id\": \"4b40f06a-5a6a-448f-bfcd-a6dbcb68da22\",\n      \"type\": \"contracttest\"\n    }\n  ]\n}"
																}
															]
														}
													],
													"id": "9cd5283b-9e86-4ca3-b2c4-d02a3501b875"
												},
												{
													"name": "Create Schema",
													"id": "886fc590-1f2f-40ea-a9bb-5af92563a174",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"schema\": {\n    \"language\": \"yaml\",\n    \"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": null,\\n  \\\"version\\\": \\\"v1.0\\\",\\n  \\\"title\\\": \\\"API\\\",\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://localhost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"Returns details about a particular user\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"tags\\\": [\\n          \\\"user\\\"\\n        ],\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"description\\\": \\\"ID of the user\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Details about a user by ID\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"\\\\\\\\'#/components/schemas/User\\\\\\\\'\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"Unexpected error\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"\\\\\\\\'#/components/schemas/Error\\\\\\\\'\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n    \"type\": \"openapi3\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/schemas",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions",
																":apiVersionId",
																"schemas"
															],
															"variable": [
																{
																	"key": "apiId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																},
																{
																	"key": "apiVersionId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																}
															]
														},
														"description": "This call creates a new schema.\n\nRequest body should contain a `schema` object which should atleast have these properties with `string` values:\n\n- **`type`**: Allowed types are `openapi3`, `openapi2`, `openapi1`, `raml` and `graphql`.\n- **`language`** : Allowed languages are `json` and `yaml` for OpenAPI and RAML schema types. GraphQL schema type accepts only `graphql` language.\n- **`schema`**: Optional. If passed, must be the content of the schema as a `string`.\n\nResponse contains a `schema` object with all the details related to the created schema, namely, `id`, `language`, `type` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
													},
													"response": [
														{
															"id": "25d66d3c-f1fe-40aa-9660-fec6ab2236ce",
															"name": "Create schema",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"schema\": {\n    \"language\": \"yaml\",\n    \"schema\": \"{\\n  \\\"openapi\\\": \\\"3.0.0\\\",\\n  \\\"info\\\": null,\\n  \\\"version\\\": \\\"v1.0\\\",\\n  \\\"title\\\": \\\"API\\\",\\n  \\\"servers\\\": [\\n    {\\n      \\\"url\\\": \\\"http://localhost:3000\\\"\\n    }\\n  ],\\n  \\\"paths\\\": {\\n    \\\"/user\\\": {\\n      \\\"get\\\": {\\n        \\\"summary\\\": \\\"Returns details about a particular user\\\",\\n        \\\"operationId\\\": \\\"listUser\\\",\\n        \\\"tags\\\": [\\n          \\\"user\\\"\\n        ],\\n        \\\"parameters\\\": [\\n          {\\n            \\\"name\\\": \\\"id\\\",\\n            \\\"in\\\": \\\"query\\\",\\n            \\\"description\\\": \\\"ID of the user\\\",\\n            \\\"required\\\": true,\\n            \\\"schema\\\": {\\n              \\\"type\\\": \\\"integer\\\",\\n              \\\"format\\\": \\\"int32\\\"\\n            }\\n          }\\n        ],\\n        \\\"responses\\\": {\\n          \\\"200\\\": {\\n            \\\"description\\\": \\\"Details about a user by ID\\\",\\n            \\\"headers\\\": {\\n              \\\"x-next\\\": {\\n                \\\"description\\\": \\\"A link to the next page of responses\\\",\\n                \\\"schema\\\": {\\n                  \\\"type\\\": \\\"string\\\"\\n                }\\n              }\\n            },\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"\\\\\\\\'#/components/schemas/User\\\\\\\\'\\\"\\n                }\\n              }\\n            }\\n          },\\n          \\\"default\\\": {\\n            \\\"description\\\": \\\"Unexpected error\\\",\\n            \\\"content\\\": {\\n              \\\"application/json\\\": {\\n                \\\"schema\\\": {\\n                  \\\"$ref\\\": \\\"\\\\\\\\'#/components/schemas/Error\\\\\\\\'\\\"\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  },\\n  \\\"components\\\": {\\n    \\\"schemas\\\": {\\n      \\\"User\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"id\\\",\\n          \\\"name\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"id\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int64\\\"\\n          },\\n          \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          },\\n          \\\"tag\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      },\\n      \\\"Error\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"required\\\": [\\n          \\\"code\\\",\\n          \\\"message\\\"\\n        ],\\n        \\\"properties\\\": {\\n          \\\"code\\\": {\\n            \\\"type\\\": \\\"integer\\\",\\n            \\\"format\\\": \\\"int32\\\"\\n          },\\n          \\\"message\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\n    \"type\": \"openapi3\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/schemas",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"versions",
																		":apiVersionId",
																		"schemas"
																	],
																	"variable": [
																		{
																			"key": "apiId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		},
																		{
																			"key": "apiVersionId",
																			"value": "cillum tempor irure deserunt mo",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"schema\": {\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"createdAt\": \"2021-05-22T13:17:07.000Z\",\n    \"createdBy\": \"5665\",\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"type\": \"openapi3\",\n    \"updatedBy\": \"5665\",\n    \"updatedAt\": \"2021-05-22T13:17:07.000Z\"\n  }\n}"
														}
													]
												}
											],
											"id": "c21db8d0-dfec-48f5-a4d0-66b9a1c4dd2a"
										},
										{
											"name": "Get an API Version",
											"id": "47f3d27f-4b24-4ee1-8ac8-49630d384685",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"versions",
														":apiVersionId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														},
														{
															"key": "apiVersionId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												},
												"description": "This call fetches details about the specified API Version.\n\nThe response will contain a `version` object which would contain all the details of the API Version.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
											},
											"response": [
												{
													"id": "ec632201-80fc-4b35-8366-be78575dda13",
													"name": "Get an API version",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions",
																":apiVersionId"
															],
															"variable": [
																{
																	"key": "apiId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																},
																{
																	"key": "apiVersionId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"version\": {\n    \"api\": \"06e41ca3-8bea-4bc5-a726-70338b9f1940\",\n    \"createdAt\": \"2019-07-21T16:31:15.000Z\",\n    \"createdBy\": \"5665\",\n    \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\",\n    \"name\": \"0.1\",\n    \"schema\": [\n      \"3484cd1e-e00d-4c39-aea4-539663afe898\"\n    ],\n    \"updatedAt\": \"2019-07-21T16:31:15.000Z\",\n    \"updatedBy\": \"5665\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update an API Version",
											"id": "bf770710-d567-4b63-b245-1e736a9e5f4d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"version\": {\n    \"name\": \"2.0\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"versions",
														":apiVersionId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														},
														{
															"key": "apiVersionId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												},
												"description": "This call updates an existing API Version.  \n\nRequest body should contain a `version` object with the fields which need to be updated. Only field which can be updated is `name`.\n\nResponse contains a `version` object with all the details related to the created API Version, namely, `id`, `name`, `api` etc.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
											},
											"response": [
												{
													"id": "11a18b4e-6889-4d46-91b8-37bfb62925f9",
													"name": "Update an API version",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"version\": {\n    \"name\": \"2.0\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions",
																":apiVersionId"
															],
															"variable": [
																{
																	"key": "apiId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																},
																{
																	"key": "apiVersionId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"version\": {\n    \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\",\n    \"createdAt\": \"2019-07-26T11:24:15.000Z\",\n    \"createdBy\": \"12\",\n    \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"name\": \"2.0\",\n    \"updatedAt\": \"2019-08-09T09:27:36.000Z\",\n    \"updatedBy\": \"5665\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete an API Version",
											"id": "7c8e2af4-c05a-469b-a364-7dd1a2f51c30",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"versions",
														":apiVersionId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														},
														{
															"key": "apiVersionId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												},
												"description": "This call deletes an existing API Version having the specified id.  \n\nResponse contains an `version` object with `id` of the API Version which was deleted.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
											},
											"response": [
												{
													"id": "184eca36-b392-455c-bae4-7f67dc13bca1",
													"name": "Delete an API version",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions",
																":apiVersionId"
															],
															"variable": [
																{
																	"key": "apiId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																},
																{
																	"key": "apiVersionId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"version\": {\n    \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\"\n  }\n}"
												}
											]
										},
										{
											"name": "Get contract test relations",
											"id": "17d99861-f7b1-498d-b3b0-87c56bc84d0b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/contracttest",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"versions",
														":apiVersionId",
														"contracttest"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														},
														{
															"key": "apiVersionId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												},
												"description": "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
											},
											"response": [
												{
													"id": "e7aa1d4a-8d00-4aab-b727-23fa5d20f528",
													"name": "Get contract test relations",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/contracttest",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions",
																":apiVersionId",
																"contracttest"
															],
															"variable": [
																{
																	"key": "apiId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																},
																{
																	"key": "apiVersionId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"contracttest\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    },\n    {\n      \"collectionId\": \"7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725\",\n      \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n      \"name\": \"C1\",\n      \"updatedAt\": \"2019-08-29T11:40:39.000Z\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Get  documentation relations",
											"id": "063b08ef-a330-428e-b703-0903bb297cae",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/documentation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"versions",
														":apiVersionId",
														"documentation"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														},
														{
															"key": "apiVersionId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												},
												"description": "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
											},
											"response": [
												{
													"id": "5cdac433-760f-4051-8dbc-e0f1005d8eb0",
													"name": "Get documentation relations",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/documentation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions",
																":apiVersionId",
																"documentation"
															],
															"variable": [
																{
																	"key": "apiId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																},
																{
																	"key": "apiVersionId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"documentation\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    },\n    {\n      \"collectionId\": \"7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725\",\n      \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n      \"name\": \"C1\",\n      \"updatedAt\": \"2019-08-29T11:40:39.000Z\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Get environment relations",
											"id": "2b6f8ec3-3a23-4df2-ba91-8dbd5a5ecd52",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/environment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"versions",
														":apiVersionId",
														"environment"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														},
														{
															"key": "apiVersionId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												},
												"description": "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
											},
											"response": [
												{
													"id": "6606fad8-fdad-4948-9bad-16e990b60fd2",
													"name": "Get environment relations",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/environment",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions",
																":apiVersionId",
																"environment"
															],
															"variable": [
																{
																	"key": "apiId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																},
																{
																	"key": "apiVersionId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"environment\": [\n    {\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    },\n    {\n      \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n      \"name\": \"C1\",\n      \"updatedAt\": \"2019-08-29T11:40:39.000Z\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Get integration test relations",
											"id": "7b81d580-0e73-44c1-a53b-ca7fc62e18c1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/integrationtest",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"versions",
														":apiVersionId",
														"integrationtest"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														},
														{
															"key": "apiVersionId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												},
												"description": "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
											},
											"response": [
												{
													"id": "798284a5-60d2-4609-9f76-928867ba4bbf",
													"name": "Get integration test relations",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/integrationtest",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions",
																":apiVersionId",
																"integrationtest"
															],
															"variable": [
																{
																	"key": "apiId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																},
																{
																	"key": "apiVersionId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"integrationtest\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    },\n    {\n      \"collectionId\": \"7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725\",\n      \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n      \"name\": \"C1\",\n      \"updatedAt\": \"2019-08-29T11:40:39.000Z\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Get monitor relations",
											"id": "7606b2cf-c21b-426b-832c-0a3d00998fde",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/monitor",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"versions",
														":apiVersionId",
														"monitor"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														},
														{
															"key": "apiVersionId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												},
												"description": "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
											},
											"response": [
												{
													"id": "1ccc0a9f-f6b6-4aac-b6e5-20724c1626ae",
													"name": "Get monitor relations",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/monitor",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions",
																":apiVersionId",
																"monitor"
															],
															"variable": [
																{
																	"key": "apiId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																},
																{
																	"key": "apiVersionId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"monitor\": [\n    {\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"monitorId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    },\n    {\n      \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n      \"monitorId\": \"7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725\",\n      \"name\": \"C1\",\n      \"updatedAt\": \"2019-08-29T11:40:39.000Z\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Get test suite relations",
											"id": "330b4eec-e47c-4132-8379-99b32b7241b9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/testsuite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"versions",
														":apiVersionId",
														"testsuite"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														},
														{
															"key": "apiVersionId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												},
												"description": "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
											},
											"response": [
												{
													"id": "59637d5c-0c04-49b0-b5cf-d029a275c6bb",
													"name": "Get test suite relations",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/testsuite",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions",
																":apiVersionId",
																"testsuite"
															],
															"variable": [
																{
																	"key": "apiId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																},
																{
																	"key": "apiVersionId",
																	"value": "cillum tempor irure deserunt mo",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"testsuite\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    },\n    {\n      \"collectionId\": \"7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725\",\n      \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n      \"name\": \"C1\",\n      \"updatedAt\": \"2019-08-29T11:40:39.000Z\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Sync relations with schema",
											"id": "05a5fb0f-5571-45a2-8ff3-4c9085c15b7c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/:entityType/:entityId/syncWithSchema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"versions",
														":apiVersionId",
														":entityType",
														":entityId",
														"syncWithSchema"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "{{apiId}}",
															"description": "(Required) Id of the API"
														},
														{
															"key": "apiVersionId",
															"value": "{{apiVersionId}}",
															"description": "(Required) Id of the API version"
														},
														{
															"key": "entityType",
															"value": "{{entityType}}",
															"description": "(Required) Relation type (e.g documentation, contracttest, integrationtest, testsuite, mock, monitor)"
														},
														{
															"key": "entityId",
															"value": "{{entityId}}",
															"description": "(Required) Relation id"
														}
													]
												},
												"description": "This call allows you to keep the relation in sync with the API schema.\n\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
											},
											"response": [
												{
													"id": "762ac709-6827-4074-8ede-4285608327cb",
													"name": "Successful sync",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/:entityType/:entityId/syncWithSchema",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions",
																":apiVersionId",
																":entityType",
																":entityId",
																"syncWithSchema"
															],
															"variable": [
																{
																	"key": "apiId",
																	"value": "{{apiId}}",
																	"description": "(Required) Id of the API"
																},
																{
																	"key": "apiVersionId",
																	"value": "{{apiVersionId}}",
																	"description": "(Required) Id of the API version"
																},
																{
																	"key": "entityType",
																	"value": "{{entityType}}",
																	"description": "(Required) Relation type (e.g documentation, contracttest, integrationtest, testsuite, mock, monitor)"
																},
																{
																	"key": "entityId",
																	"value": "{{entityId}}",
																	"description": "(Required) Relation id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": true\n}"
												},
												{
													"id": "b1add25d-bdf6-44fe-be51-fb42fda9262c",
													"name": "Failed to sync",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions/:apiVersionId/:entityType/:entityId/syncWithSchema",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions",
																":apiVersionId",
																":entityType",
																":entityId",
																"syncWithSchema"
															],
															"variable": [
																{
																	"key": "apiId",
																	"value": "{{apiId}}",
																	"description": "(Required) Id of the API"
																},
																{
																	"key": "apiVersionId",
																	"value": "{{apiVersionId}}",
																	"description": "(Required) Id of the API version"
																},
																{
																	"key": "entityType",
																	"value": "{{entityType}}",
																	"description": "(Required) Relation type (e.g documentation, contracttest, integrationtest, testsuite, mock, monitor)"
																},
																{
																	"key": "entityId",
																	"value": "{{entityId}}",
																	"description": "(Required) Relation id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"message\": \"Unable to validate. Only the OpenAPI 3.0 schema format is supported.\",\n    \"name\": \"validationFailed\"\n  }\n}"
												}
											]
										}
									],
									"id": "8f40c95d-0f6c-4d55-ba95-bd7ae956be97"
								},
								{
									"name": "Get All API Versions",
									"id": "c21fd9e9-138c-4230-ab04-caca6949b8cc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId",
												"versions"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										},
										"description": "This call fetches details about the all the API Versions in the specified API.\n\nThe response will contain an array `versions` object which would be a list of all the API Version along with their details.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
									},
									"response": [
										{
											"id": "42653564-b773-41e1-9329-f8bc2b80e671",
											"name": "Get All API versions",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"versions"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"versions\": [\n    {\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"createdBy\": \"5665\",\n      \"description\": \"Description\",\n      \"id\": \"024660a6-c837-46ca-91d8-7e8dd7c669de\",\n      \"name\": \"0.1\",\n      \"summary\": \"Summary\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    },\n    {\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"createdBy\": \"5665\",\n      \"description\": \"Description\",\n      \"id\": \"00932d3b-20f1-454f-a77e-38b4023163ea\",\n      \"name\": \"0.2\",\n      \"summary\": \"Summary\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create API Version",
									"id": "15338403-ba94-424f-a07d-54cd1ad5fce7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\": {\n    \"name\": \"1.0\",\n    \"source\": {\n      \"id\": \"{{apiVersionId}}\",\n      \"relations\": {\n        \"documentation\": true,\n        \"mock\": true,\n        \"monitor\": true\n      },\n      \"schema\": true\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId",
												"versions"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										},
										"description": "This call creates a new API version in the specified API.  \n\nRequest body should contain a `version` object which should have fields:\n\n<table>\n<tr>\n\t<td>name</td>\n\t<td>Required. Name of the API Version</td>\n</tr>\n<tr>\n\t<td>source</td>\n\t<td>\n\t\tIf specified, it will copy the contents of the specified api version to create a new api verison.\n\t\t<table>\n\t\t\t<tr>\n\t\t\t\t<td>id</td>\n\t\t\t\t<td>Required. Id of the apiversion from where the details are to be copied</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>schema</td>\n\t\t\t\t<td>Boolean. If true then copies the schema from the specified api version</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>relations</td>\n\t\t\t\t<td>Object. {\"&lt;relationType&gt;\": true/false}.  \n\t\t\t\t\tAllowed relation types are `mock`, `monitor`, `documentation`, `contracttest`, `integrationtest`, `testsuite`, `environment`\n\t\t\t\tRelation types which should be copied over to the new api verison</td>\n\t\t\t</tr>\n\t\t</table>\n\t</td>\n</tr>\n</table>\n\nResponse contains a `version` object with all the details related to the created API Version, namely, `id`, `name`, `api`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
									},
									"response": [
										{
											"id": "d66ca9c3-87ff-4148-8a91-9f2a562ec8d3",
											"name": "Create API version",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"version\": {\n    \"name\": \"1.0\",\n    \"source\": {\n      \"id\": \"{{apiVersionId}}\",\n      \"relations\": {\n        \"documentation\": true,\n        \"mock\": true,\n        \"monitor\": true\n      },\n      \"schema\": true\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"versions"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"version\": {\n    \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\",\n    \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"name\": \"1.0\"\n  }\n}"
										}
									]
								}
							],
							"id": "3dd68a5c-91b4-4899-bb62-92657bdf4459"
						},
						{
							"name": "Single API",
							"id": "33cb211d-d9a9-4be7-8ea8-150af3daf206",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/:apiId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This call fetches a single API having the specified id.\n\nResponse contains an `api` object with all the details related to the queried API, namely, `id`, `name`, `summary`, `description` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "28215585-aac3-4681-9ea9-203b219d138c",
									"name": "Get single API",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"api\": {\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"description\": \"This is a description.This is a description.\",\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}"
								}
							]
						},
						{
							"name": "Update an API",
							"id": "04745cff-bf2b-484a-8e0e-ed8d3cebd1a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"api\": {\n    \"description\": \"This is an updated Description\",\n    \"name\": \"New name\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apis/:apiId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This call updates an existing API .  \n\nRequest body should contain an `api` object which should have the fields to be updated. Only `name`, `summary` and `description` fields can be edited for an API.\n\nResponse contains an `api` object with all the details related to the created API, namely, `id`, `name`, `summary`, `description` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "3de4aed9-14e7-4eb3-b394-b99a6015f03b",
									"name": "Update an API",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"api\": {\n    \"description\": \"This is an updated Description\",\n    \"name\": \"New name\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"api\": {\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"description\": \"This is a description.\",\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}"
								}
							]
						},
						{
							"name": "Delete an API",
							"id": "fd6b7784-c1b1-4e67-8d72-44b8cb76bc9b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/:apiId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This call deletes an existing API having the specified id.  \n\nResponse contains an `api` object with `id` of the API which was deleted.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "472b352a-8f7f-4047-a39f-f2df2390b0c5",
									"name": "Delete an API",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"api\": {\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\"\n  }\n}"
								}
							]
						}
					],
					"id": "59ab5b68-0ed4-4243-bfef-1fc95b81977f"
				},
				{
					"name": "Get all APIs",
					"id": "a38cc7c5-3c4b-49d8-847f-e41ec823beef",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/apis?workspace=c90a3482-f80d-43d6-9dfb-0830f5e43605&since={{since}}&until={{until}}&createdBy={{createdBy}}&updatedBy={{updatedBy}}&isPublic={{isPublic}}&name={{name}}&summary={{summary}}&description={{description}}&sort={{sort}}&direction={{direction}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis"
							],
							"query": [
								{
									"key": "workspace",
									"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605",
									"description": "Only return APIs that are inside the given workspace."
								},
								{
									"key": "since",
									"value": "{{since}}",
									"description": "Only return APIs that have been updated after this time. Time is represented using the ISO 8601 date and time format."
								},
								{
									"key": "until",
									"value": "{{until}}",
									"description": "Only return APIs that have been updated before this time. Time is represented using the ISO 8601 date and time format."
								},
								{
									"key": "createdBy",
									"value": "{{createdBy}}",
									"description": "Only return APIs that have been created by the user ID represented by the given value."
								},
								{
									"key": "updatedBy",
									"value": "{{updatedBy}}",
									"description": "Only return APIs that have been updated by the user ID represented by the given value."
								},
								{
									"key": "isPublic",
									"value": "{{isPublic}}",
									"description": "Only return APIs with the corresponding privacy state. Public APIs have the isPublic value true; private APIs have the isPublic value false."
								},
								{
									"key": "name",
									"value": "{{name}}",
									"description": "Only return APIs whose name includes the given value. Matching is case insensitive."
								},
								{
									"key": "summary",
									"value": "{{summary}}",
									"description": "Only return APIs whose summary includes the given value. Matching is case insensitive."
								},
								{
									"key": "description",
									"value": "{{description}}",
									"description": "Only return APIs whose description includes the given value. Matching is case insensitive."
								},
								{
									"key": "sort",
									"value": "{{sort}}",
									"description": "The value of sort can be one of the names of the fields included in the response."
								},
								{
									"key": "direction",
									"value": "{{direction}}",
									"description": "The sorting direction, which can be ascending or descending. The value can be asc to specify an ascending direction or desc to specify a descending direction. If none is specified, the default sorting direction is descending for timestamp and numeric fields and ascending otherwise. An ID is not considered a numeric field."
								}
							]
						},
						"description": "This call fetches all the APIs present in the specified workspace\n\nResponse contains an array named `apis` which would contain all the details of APIs present in the workspace.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
					},
					"response": [
						{
							"id": "e449a909-7b2e-48a3-aa72-5d35a60fc943",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apis?workspace=c90a3482-f80d-43d6-9dfb-0830f5e43605&since={{since}}&until={{until}}&createdBy={{createdBy}}&updatedBy={{updatedBy}}&isPublic={{isPublic}}&name={{name}}&summary={{summary}}&description={{description}}&sort={{sort}}&direction={{direction}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspace",
											"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605"
										},
										{
											"key": "since",
											"value": "{{since}}"
										},
										{
											"key": "until",
											"value": "{{until}}"
										},
										{
											"key": "createdBy",
											"value": "{{createdBy}}"
										},
										{
											"key": "updatedBy",
											"value": "{{updatedBy}}"
										},
										{
											"key": "isPublic",
											"value": "{{isPublic}}"
										},
										{
											"key": "name",
											"value": "{{name}}"
										},
										{
											"key": "summary",
											"value": "{{summary}}"
										},
										{
											"key": "description",
											"value": "{{description}}"
										},
										{
											"key": "sort",
											"value": "{{sort}}"
										},
										{
											"key": "direction",
											"value": "{{direction}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create API",
					"id": "fd4cbe18-464e-4137-acdb-a5dedf0ae315",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"api\": {\n    \"description\": \"This is description.\",\n    \"name\": \"Sync Service API\",\n    \"summary\": \"This is supposed to be a short summary.\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/apis?workspace=c90a3482-f80d-43d6-9dfb-0830f5e43605",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis"
							],
							"query": [
								{
									"key": "workspace",
									"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605"
								}
							]
						},
						"description": "This call creates a new API with a default API Version.  \n\nRequest body should contain an `api` object which should atleast have a property `name`.\n\nResponse contains an `api` object with all the details related to the created API, namely, `id`, `name`, `summary`, `description`, etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
					},
					"response": [
						{
							"id": "556f50e7-2217-4ae2-9279-1f3c527c4928",
							"name": "Create API",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"api\": {\n    \"description\": \"This is description.\",\n    \"name\": \"Sync Service API\",\n    \"summary\": \"This is supposed to be a short summary.\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apis?workspace=c90a3482-f80d-43d6-9dfb-0830f5e43605",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspace",
											"value": "c90a3482-f80d-43d6-9dfb-0830f5e43605"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"api\": {\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"description\": \"This is supposed to handle markdown *descriptions*.\",\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}"
						}
					]
				}
			],
			"id": "553f399b-6fb6-467c-82d0-6949e11f12e3"
		},
		{
			"name": "collections",
			"item": [
				{
					"name": "{collection uid}",
					"item": [
						{
							"name": "Single Collection ",
							"id": "fc81b31a-52c6-453b-80df-a32195f69337",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collections/:collection_uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										":collection_uid"
									],
									"variable": [
										{
											"key": "collection_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "Access the contents of a collection that is accessible to you using its unique id (`uid`).\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "6ee811bc-3ce8-44fe-85fc-03e34eec4371",
									"name": "Valid Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/collections/:collection_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												":collection_uid"
											],
											"variable": [
												{
													"key": "collection_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"collection\": {\n    \"info\": {\n      \"_postman_id\": \"f2e66c2e-5297-e4a5-739e-20cbb90900e3\",\n      \"description\": \"This is a sample collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.\",\n      \"name\": \"Sample Collection\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"event\": [\n          {\n            \"listen\": \"test\",\n            \"script\": {\n              \"exec\": \"var responseJSON;\\ntry {\\n    tests[\\\"Body contains headers\\\"] = responseBody.has(\\\"headers\\\");\\n    responseJSON = JSON.parse(responseBody);\\n    tests[\\\"Header contains host\\\"] = \\\"host\\\" in responseJSON.headers;\\n    tests[\\\"Header contains test parameter sent as part of request header\\\"] = \\\"my-sample-header\\\" in responseJSON.headers;\\n}\\ncatch (e) { }\\n\\n\\n\\n\",\n              \"type\": \"text/javascript\"\n            }\n          }\n        ],\n        \"id\": \"82ee981b-e19f-962a-401e-ea34ebfb4848\",\n        \"name\": \"Request Headers\",\n        \"request\": {\n          \"body\": {\n            \"formdata\": [],\n            \"mode\": \"formdata\"\n          },\n          \"description\": \"\",\n          \"header\": [\n            {\n              \"description\": \"\",\n              \"key\": \"my-sample-header\",\n              \"value\": \"Lorem ipsum dolor sit amet\"\n            }\n          ],\n          \"method\": \"GET\",\n          \"url\": \"https://echo.getpostman.com/headers\"\n        },\n        \"response\": []\n      }\n    ],\n    \"variables\": []\n  }\n}"
								}
							]
						},
						{
							"name": "Update Collection",
							"id": "ec99a4a9-6a6d-4004-a3d1-07aba1d5980a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"_postman_id\": \"174bad7c-07e3-45f3-914f-36cf84e5586f\",\n      \"description\": \"This is just a sample collection.\",\n      \"name\": \"Sample Collection 530\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"method\": \"POST\",\n              \"url\": \"https://postman-echo.com/post\"\n            }\n          }\n        ],\n        \"name\": \"This is a folder\"\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"description\": \"This is a sample GET Request\",\n          \"method\": \"GET\",\n          \"url\": \"https://postman-echo/get\"\n        }\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collections/:collection_uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										":collection_uid"
									],
									"variable": [
										{
											"key": "collection_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint allows you to update an existing collection using the Postman Collection v2 format. For more information about the v2 schema, check the format [here](https://schema.getpostman.com/json/collection/v2.0.0/docs/index.html).\n\nOn successful updation of the collection, the response returns the collection `name`, `id` and `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.\n\nNote: Please be careful when trying to update the collection, as the existing collection will be replaced by the request body."
							},
							"response": [
								{
									"id": "aefd0416-160f-4a68-9a80-6505919bb34a",
									"name": "Collection Updated",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"_postman_id\": \"174bad7c-07e3-45f3-914f-36cf84e5586f\",\n      \"description\": \"This is just a sample collection.\",\n      \"name\": \"Sample Collection 530\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"method\": \"POST\",\n              \"url\": \"https://postman-echo.com/post\"\n            }\n          }\n        ],\n        \"name\": \"This is a folder\"\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"description\": \"This is a sample GET Request\",\n          \"method\": \"GET\",\n          \"url\": \"https://postman-echo/get\"\n        }\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/collections/:collection_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												":collection_uid"
											],
											"variable": [
												{
													"key": "collection_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"collection\": {\n    \"id\": \"1d3daef4-2037-4584-ab86-bafd8c8f8a55\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55\"\n  }\n}"
								},
								{
									"id": "7e9d20c6-befc-4e99-b82c-0dc24a80ae43",
									"name": "Collection ID Mismatch",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"_postman_id\": \"174bad7c-07e3-45f3-914f-36cf84e5586f\",\n      \"description\": \"This is just a sample collection.\",\n      \"name\": \"Sample Collection 530\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"method\": \"POST\",\n              \"url\": \"https://postman-echo.com/post\"\n            }\n          }\n        ],\n        \"name\": \"This is a folder\"\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"description\": \"This is a sample GET Request\",\n          \"method\": \"GET\",\n          \"url\": \"https://postman-echo/get\"\n        }\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/collections/:collection_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												":collection_uid"
											],
											"variable": [
												{
													"key": "collection_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"message\": \"The collection ID in the path does not match the collection ID in the request body.\",\n    \"name\": \"collectionMismatchError\"\n  }\n}"
								},
								{
									"id": "1c784fa3-98dd-4dfa-8443-706f1eab13e0",
									"name": "Not Enough Permissions",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"_postman_id\": \"174bad7c-07e3-45f3-914f-36cf84e5586f\",\n      \"description\": \"This is just a sample collection.\",\n      \"name\": \"Sample Collection 530\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"method\": \"POST\",\n              \"url\": \"https://postman-echo.com/post\"\n            }\n          }\n        ],\n        \"name\": \"This is a folder\"\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"description\": \"This is a sample GET Request\",\n          \"method\": \"GET\",\n          \"url\": \"https://postman-echo/get\"\n        }\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/collections/:collection_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												":collection_uid"
											],
											"variable": [
												{
													"key": "collection_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"message\": \"You do not have enough permissions to perform this action.\",\n    \"name\": \"forbiddenError\"\n  }\n}"
								},
								{
									"id": "96804d5b-81e4-4895-9b79-5e8898c9c5fd",
									"name": "Collection Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"_postman_id\": \"174bad7c-07e3-45f3-914f-36cf84e5586f\",\n      \"description\": \"This is just a sample collection.\",\n      \"name\": \"Sample Collection 530\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"method\": \"POST\",\n              \"url\": \"https://postman-echo.com/post\"\n            }\n          }\n        ],\n        \"name\": \"This is a folder\"\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"description\": \"This is a sample GET Request\",\n          \"method\": \"GET\",\n          \"url\": \"https://postman-echo/get\"\n        }\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/collections/:collection_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												":collection_uid"
											],
											"variable": [
												{
													"key": "collection_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"details\": {\n      \"id\": \"1d3daef4-2037-4584-ab86-bafd8c8f8a54\",\n      \"item\": \"collection\"\n    },\n    \"message\": \"The specified item does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}"
								}
							]
						},
						{
							"name": "Delete Collection",
							"id": "28662f94-7e9b-4cf4-8bb7-2aed7b70a186",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collections/:collection_uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										":collection_uid"
									],
									"variable": [
										{
											"key": "collection_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint allows you to delete an existing collection.\n\nOn successful deletion of the collection, the response returns the `id` and `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "affa0d5e-8b31-41ba-8572-01a16fdc5de8",
									"name": "Collection Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/collections/:collection_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												":collection_uid"
											],
											"variable": [
												{
													"key": "collection_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"collection\": {\n    \"id\": \"a14c6da7-afba-4a84-bf22-4febbaaced6c\",\n    \"uid\": \"5852-a14c6da7-afba-4a84-bf22-4febbaaced6c\"\n  }\n}"
								},
								{
									"id": "c5e1195c-81aa-41b3-86d3-9120c8ee4877",
									"name": "Collection Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/collections/:collection_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"collections",
												":collection_uid"
											],
											"variable": [
												{
													"key": "collection_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"details\": {\n      \"id\": \"a14c6da7-afba-4a84-bf22-4febbaaced6c\",\n      \"item\": \"collection\"\n    },\n    \"message\": \"The specified item does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}"
								}
							]
						}
					],
					"id": "c1464f97-e60a-46c7-8ba2-985974c7a747"
				},
				{
					"name": "All Collections",
					"id": "fe189e8c-04e5-4e73-a4aa-e7aa86217610",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/collections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections"
							]
						},
						"description": "The `/collections` endpoint returns a list of all [collections](https://www.getpostman.com/docs/collections) that are accessible by you. The list includes your own collections and the collections that you have subscribed to.\n\nThe response contains an array of collection information containing the `name`, `id`, `owner` and `uid` of each collection.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
					},
					"response": [
						{
							"id": "236d50c4-d53f-489f-a94b-155d26d962a0",
							"name": "Valid Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/collections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"collections\": [\n    {\n      \"id\": \"dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n      \"name\": \"Cloud API\",\n      \"owner\": \"631643\",\n      \"uid\": \"631643-dac5eac9-148d-a32e-b76b-3edee9da28f7\"\n    },\n    {\n      \"id\": \"f2e66c2e-5297-e4a5-739e-20cbb90900e3\",\n      \"name\": \"Sample Collection\",\n      \"owner\": \"631643\",\n      \"uid\": \"631643-f2e66c2e-5297-e4a5-739e-20cbb90900e3\"\n    },\n    {\n      \"id\": \"f695cab7-6878-eb55-7943-ad88e1ccfd65\",\n      \"name\": \"Postman Echo\",\n      \"owner\": \"631643\",\n      \"uid\": \"631643-f695cab7-6878-eb55-7943-ad88e1ccfd65\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Collection",
					"id": "87eddee2-e5ec-4bcb-9a7e-d5edd5644692",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"description\": \"This is just a sample collection.\",\n      \"name\": \"Sample Collection 909\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"method\": \"POST\",\n              \"url\": \"https://postman-echo.com/post\"\n            }\n          }\n        ],\n        \"name\": \"This is a folder\"\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"description\": \"This is a sample GET Request\",\n          \"method\": \"GET\",\n          \"url\": \"https://postman-echo/get\"\n        }\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/collections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections"
							]
						},
						"description": "This endpoint allows you to create collections using the Postman Collection v2 format. For more information about the v2 schema, check the format [here](https://schema.getpostman.com/json/collection/v2.0.0/docs/index.html).\n\nOn successful creation of the collection, the response returns the collection `name`, `id` and the `uid`.\n\nYou can also specify the context of a workspace to create a collection in directly by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
					},
					"response": [
						{
							"id": "3d5ff090-e597-437b-bc58-50bf2a914f62",
							"name": "Create Collection in a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"description\": \"This is just a sample collection.\",\n      \"name\": \"Sample Collection 909\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"method\": \"POST\",\n              \"url\": \"https://postman-echo.com/post\"\n            }\n          }\n        ],\n        \"name\": \"This is a folder\"\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"description\": \"This is a sample GET Request\",\n          \"method\": \"GET\",\n          \"url\": \"https://postman-echo/get\"\n        }\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"collection\": {\n    \"id\": \"2412a72c-1d8e-491b-aced-93809c0e94e9\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"\n  }\n}"
						},
						{
							"id": "c870a6ac-7656-47c8-976a-4999826855b1",
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"description\": \"This is just a sample collection.\",\n      \"name\": \"Sample Collection 909\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"method\": \"POST\",\n              \"url\": \"https://postman-echo.com/post\"\n            }\n          }\n        ],\n        \"name\": \"This is a folder\"\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"description\": \"This is a sample GET Request\",\n          \"method\": \"GET\",\n          \"url\": \"https://postman-echo/get\"\n        }\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"details\": [\n      \": must have required property 'info'\",\n      \"item/1/request/header: must be array\",\n      \"item/1/request/header: must be string\",\n      \"item/1/request/header: must match exactly one schema in oneOf\",\n      \"item/1/request: must be string\",\n      \"item/1/request: must match exactly one schema in oneOf\",\n      \"item/1: must have required property 'item'\",\n      \"item/1: must match exactly one schema in oneOf\"\n    ],\n    \"message\": \"Found 8 errors with the supplied collection.\",\n    \"name\": \"malformedRequestError\"\n  }\n}"
						}
					]
				},
				{
					"name": "Create a Fork",
					"id": "c4d3f02a-8596-4e04-a20c-fa41c0bea6bb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"label\": \"Fork label\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/collections/fork/:collection_uid?workspace={{workspace_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections",
								"fork",
								":collection_uid"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspace_id}}",
									"description": "Workspace ID is required to create a fork"
								}
							],
							"variable": [
								{
									"key": "collection_uid",
									"value": "cillum tempor irure deserunt mo",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint allows you to create a fork from an existing collection.\n\nOn successful creation of the collection, the response returns the collection `name`, `id`, `uid` along with `fork` information.\n\nYou can also specify the context of a workspace to fork a collection in by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
					},
					"response": [
						{
							"id": "7ce76f36-8d23-47d5-9bea-a5b487e65193",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"label\": \"Fork label\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collections/fork/:collection_uid?workspace={{workspace_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"fork",
										":collection_uid"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace_id}}"
										}
									],
									"variable": [
										{
											"key": "collection_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Merge a Fork",
					"id": "697b8075-43d6-4048-a657-704f8a778140",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"destination\": \"{{destination_collection_uid}}\",\n  \"source\": \"{{source_collection_uid}}\",\n  \"strategy\": \"deleteSource\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/collections/merge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collections",
								"merge"
							]
						},
						"description": "This endpoint allows you to merge a forked collection back to its destination collection.\n\nOn successful creation of the collection, the response returns the collection `name`, `id` and `uid`.\n\nYou need to specify the fork UID (as `source`) and destination collection UID (as `destination`) in the request body.\n\nOptionally, you can also specify the merge strategy as either `deleteSource` or `updateSourceWithDestination`. Following is an explanation of the merge strategies\n\n| Merge Strategy | Behaviour |\n| --- | --- |\n| deleteSource | Forked collection is deleted after merging |\n| updateSourceWithDestination | Forked collection is up to date with changes in destination collection |\n\nIf the collections cannot be merged (due to conflicts), appropriate error messages will be returned.\n\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
					},
					"response": [
						{
							"id": "138c81cd-e263-4688-83fa-5e891b5fa0cd",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"destination\": \"{{destination_collection_uid}}\",\n  \"source\": \"{{source_collection_uid}}\",\n  \"strategy\": \"deleteSource\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collections/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collections",
										"merge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "6f73ce58-1fe9-4a20-9baa-2022a10bff1d"
		},
		{
			"name": "environments",
			"item": [
				{
					"name": "{environment uid}",
					"item": [
						{
							"name": "Single Environment",
							"id": "1c2d0646-7c98-4476-a1b5-7fdc9be63cdc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/environments/:environment_uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":environment_uid"
									],
									"variable": [
										{
											"key": "environment_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "Access the contents of an environment that is accessible to you using its unique id (`uid`).\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "e8f48ab1-4932-4374-beda-93e38e4816be",
									"name": "Valid Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/environments/:environment_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":environment_uid"
											],
											"variable": [
												{
													"key": "environment_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"environment\": {\n    \"createdAt\": \"2020-11-05T13:59:22.000Z\",\n    \"id\": \"1b163ddc-62ff-41d9-b74b-71424b9aa69d\",\n    \"isPublic\": false,\n    \"name\": \"Contract Test Environment\",\n    \"owner\": \"10016724\",\n    \"updatedAt\": \"2020-11-05T13:59:23.000Z\",\n    \"values\": [\n      {\n        \"enabled\": true,\n        \"key\": \"env-apiKey\",\n        \"value\": \"\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Update Environment",
							"id": "ad78c0ba-cfd8-443b-99b3-cb10440f5d76",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"environment\": {\n    \"name\": \"New Name\",\n    \"values\": [\n      {\n        \"key\": \"name\",\n        \"value\": \"Bruce Wayne\"\n      },\n      {\n        \"key\": \"occupation\",\n        \"value\": \"Vigilante\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/environments/:environment_uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":environment_uid"
									],
									"variable": [
										{
											"key": "environment_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint replaces an existing environment.\n\nA sample body is added to the request that conforms to the following JSON schema:\n\n```json\n{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"environment\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"maxLength\": 254,\n\t\t\t\t\t\"minLength\": 1\n\t\t\t\t},\n\t\t\t\t\"values\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"maxItems\": 100,\n\t\t\t\t\t\"additionalItems\": false,\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"key\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"maxLength\": 254,\n\t\t\t\t\t\t\t\t\"minLength\": 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"value\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"maxLength\": 254,\n\t\t\t\t\t\t\t\t\"minLength\": 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"type\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"enabled\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\t\"key\",\n\t\t\t\t\t\t\t\"value\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"environment\"\n\t]\n}\n```\n\nOn successful updation of the environment, the API returns the environment name and `id`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "6988aaf1-60e0-463b-8633-2254477893e8",
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"environment\": {\n    \"name\": \"New Name\",\n    \"values\": [\n      {\n        \"key\": \"name\",\n        \"value\": \"Bruce Wayne\"\n      },\n      {\n        \"key\": \"occupation\",\n        \"value\": \"Vigilante\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:environment_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":environment_uid"
											],
											"variable": [
												{
													"key": "environment_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"environment\": {\n    \"id\": \"357668d2-84f1-2264-438b-113095359f80\",\n    \"name\": \"New Name\",\n    \"uid\": \"631643-357668d2-84f1-2264-438b-113095359f80\"\n  }\n}"
								},
								{
									"id": "14fa1149-50e9-416c-b33c-fde4feb6876d",
									"name": "Failure Response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"environment\": {\n    \"name\": \"New Name\",\n    \"values\": [\n      {\n        \"key\": \"name\",\n        \"value\": \"Bruce Wayne\"\n      },\n      {\n        \"key\": \"occupation\",\n        \"value\": \"Vigilante\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:environment_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":environment_uid"
											],
											"variable": [
												{
													"key": "environment_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"message\": \"Invalid type: null (expected object) at environment.values.0\",\n    \"name\": \"malformedRequestError\"\n  }\n}"
								}
							]
						},
						{
							"name": "Delete Environment",
							"id": "eeacc3b6-241f-4441-b266-45a84058f439",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/environments/:environment_uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":environment_uid"
									],
									"variable": [
										{
											"key": "environment_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint allows you to delete a single environment based on an environment's unique `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "680cba82-f22e-4516-8025-258e5c68d948",
									"name": "Environment Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/environments/:environment_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":environment_uid"
											],
											"variable": [
												{
													"key": "environment_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"environment\": {\n    \"id\": \"4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce\",\n    \"uid\": \"5852-4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce\"\n  }\n}"
								},
								{
									"id": "7e7198f4-f13e-48f9-845e-c882c70e9a66",
									"name": "Environment Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/environments/:environment_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":environment_uid"
											],
											"variable": [
												{
													"key": "environment_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"message\": \"The specified environment does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}"
								}
							]
						}
					],
					"id": "3d86943c-f9d8-43c0-b6ef-6361a13374d3"
				},
				{
					"name": "All Environments",
					"id": "da96cba5-5ea7-480a-9b0f-611ce611283b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/environments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments"
							]
						},
						"description": "The `/environments` endpoint returns a list of all [environments](https://www.getpostman.com/docs/environments) that belong to you..\n\nThe response contains an array of environments' information containing the `name`, `id`, `owner` and `uid` of each environment.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
					},
					"response": [
						{
							"id": "c43d59aa-28d2-4557-a90b-cb5c61f040aa",
							"name": "Valid Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/environments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"environments\": [\n    {\n      \"createdAt\": \"2020-09-23T14:31:18.000Z\",\n      \"id\": \"5daabc50-8451-43f6-922d-96b403b4f28e\",\n      \"isPublic\": false,\n      \"name\": \"Users API (prod)\",\n      \"owner\": \"10016724\",\n      \"uid\": \"10016724-5daabc50-8451-43f6-922d-96b403b4f28e\",\n      \"updatedAt\": \"2020-12-04T14:13:40.000Z\"\n    },\n    {\n      \"createdAt\": \"2020-02-04T19:34:23.000Z\",\n      \"id\": \"7d786cc8-142b-4d62-b5a5-872afc37ad16\",\n      \"isPublic\": false,\n      \"name\": \"Environment Scanner\",\n      \"owner\": \"10016724\",\n      \"uid\": \"10016724-7d786cc8-142b-4d62-b5a5-872afc37ad16\",\n      \"updatedAt\": \"2020-08-12T13:34:06.000Z\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Environment",
					"id": "37850992-4720-46b5-b01c-b6efae372854",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"environment\": {\n    \"name\": \"Sample Environment Name (required)\",\n    \"values\": [\n      {\n        \"key\": \"variable_name_1\",\n        \"value\": \"The value of the variable\"\n      },\n      {\n        \"key\": \"variable_name_2\",\n        \"value\": \"\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/environments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments"
							]
						},
						"description": "A sample body is added to the request that conforms to the following JSON schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"environment\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n              \"type\": \"string\",\n              \"maxLength\": 254,\n              \"minLength\": 1\n            },\n        \"values\": {\n          \"type\": \"array\",\n          \"maxItems\": 100,\n          \"additionalItems\": false,\n          \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"key\": {\n                  \"type\": \"string\",\n                  \"maxLength\": 254\n                  \"minLength\": 1\n                },\n                \"value\": { \"type\": \"string\" },\n                \"enabled\": { \"type\": \"boolean\" }\n              },\n              \"required\": [\"key\", \"value\"]\n            }\n        }\n      },\n      \"required\": [\"name\"]\n    }\n  },\n  \"required\": [\"environment\"]\n}\n```\n\nOn successful creation of the environment, the API returns the environment name and `id`.\n\nYou can also specify the context of a workspace to create an environment in directly by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
					},
					"response": [
						{
							"id": "59b1b48d-d007-4ff8-8dcf-c976120023d2",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"environment\": {\n    \"name\": \"Sample Environment Name (required)\",\n    \"values\": [\n      {\n        \"key\": \"variable_name_1\",\n        \"value\": \"The value of the variable\"\n      },\n      {\n        \"key\": \"variable_name_2\",\n        \"value\": \"\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/environments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"environment\": {\n    \"id\": \"f158266e-306b-4702-a2b9-e4ede7878b7a\",\n    \"name\": \"Sample Environment Name (required)\",\n    \"uid\": \"5665-f158266e-306b-4702-a2b9-e4ede7878b7a\"\n  }\n}"
						},
						{
							"id": "0f958366-7fe8-4ee7-9afa-291488bcf0a5",
							"name": "Failure Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"environment\": {\n    \"name\": \"Sample Environment Name (required)\",\n    \"values\": [\n      {\n        \"key\": \"variable_name_1\",\n        \"value\": \"The value of the variable\"\n      },\n      {\n        \"key\": \"variable_name_2\",\n        \"value\": \"\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/environments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"details\": [\n      \": must have required property 'environment'\"\n    ],\n    \"message\": \"Found 1 errors with the supplied environment.\",\n    \"name\": \"malformedRequestError\"\n  }\n}"
						}
					]
				}
			],
			"id": "ae3136c3-d037-433f-9ac0-fe861ab7122d"
		},
		{
			"name": "import",
			"item": [
				{
					"name": "Import exported data",
					"id": "40c87e7e-20d4-4682-83f4-0be0afbcc0f4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/octet-stream"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/import/exported",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"import",
								"exported"
							]
						},
						"description": "This endpoint allows you to import your exported Postman data.\nFor more information about how you can export your data, refer <a href=\"https://go.postman.co/me/export\">Export your Postman data.</a>\n\nOn successful imports, the response will be an array with Each element contaning `id`, `name` and `uid` of entities created.\n\n**Note**: Refer to examples for different scenarios.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header."
					},
					"response": [
						{
							"id": "f8801e2f-8ceb-4d94-a619-116161652765",
							"name": "Success: Import to a specific workspace with workspace ID passed as a query parameter",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/import/exported",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"import",
										"exported"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"collections\": [\n    {\n      \"id\": \"b31be584-1b1e-4444-b581-761edf88fe77\",\n      \"name\": \"Swagger Petstore\",\n      \"uid\": \"2282-b31be584-1b1e-4444-b581-761edf88fe77\"\n    }\n  ]\n}"
						},
						{
							"id": "f857cb3a-85cf-4aa0-baf6-232525fab751",
							"name": "Error: Param Missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/import/exported",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"import",
										"exported"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"details\": {\n      \"param\": \"type\"\n    },\n    \"message\": \"The request body is missing a value for the type parameter. Check your request and try again.\",\n    \"name\": \"paramMissingError\"\n  }\n}"
						}
					]
				},
				{
					"name": "Import external API specification",
					"id": "d490a70e-d3a3-4603-9668-a11c02f59b11",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"input\": {\n    \"info\": {\n      \"license\": {\n        \"name\": \"MIT\"\n      },\n      \"title\": \"Swagger Petstore\",\n      \"version\": \"1.0.0\"\n    },\n    \"openapi\": \"3.0.0\",\n    \"paths\": {\n      \"/pets\": {\n        \"get\": {\n          \"operationId\": \"listPets\",\n          \"parameters\": [\n            {\n              \"description\": \"limit\",\n              \"in\": \"query\",\n              \"name\": \"limit\",\n              \"required\": false,\n              \"schema\": {\n                \"format\": \"int32\",\n                \"type\": \"integer\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"default\": {\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"properties\": {\n                      \"code\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"required\": [\n                      \"code\",\n                      \"message\"\n                    ]\n                  }\n                }\n              },\n              \"description\": \"unexpected error\"\n            }\n          },\n          \"summary\": \"List all pets\"\n        }\n      }\n    },\n    \"servers\": [\n      {\n        \"url\": \"http://petstore.swagger.io/v1\"\n      }\n    ]\n  },\n  \"type\": \"json\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/import/openapi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"import",
								"openapi"
							]
						},
						"description": "This endpoint allows you to import external API specifications into Postman.\n\nCurrently, this endpoint only supports the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md\">OpenAPI</a> specification, for which the `importType` will be `openapi`.\n\nOn a successful import, the response will be an array with each element contaning `id`, `name` and `uid` of entities created.\n\nSupported `type`s:\n\n- string\n- json\n- file\n\nThe `input` parameter should be defined based on the `type`.\n\n> To import a file, request body must be form-data with `type` param set to `file`.\n\n**Note**: Refer to examples for different scenarios.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header."
					},
					"response": [
						{
							"id": "749c09d4-2ea9-49d5-b274-bc8f24fc26dd",
							"name": "Success: Import to a specific workspace with workspace ID passed as a query parameter",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\": {\n    \"info\": {\n      \"license\": {\n        \"name\": \"MIT\"\n      },\n      \"title\": \"Swagger Petstore\",\n      \"version\": \"1.0.0\"\n    },\n    \"openapi\": \"3.0.0\",\n    \"paths\": {\n      \"/pets\": {\n        \"get\": {\n          \"operationId\": \"listPets\",\n          \"parameters\": [\n            {\n              \"description\": \"limit\",\n              \"in\": \"query\",\n              \"name\": \"limit\",\n              \"required\": false,\n              \"schema\": {\n                \"format\": \"int32\",\n                \"type\": \"integer\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"default\": {\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"properties\": {\n                      \"code\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"required\": [\n                      \"code\",\n                      \"message\"\n                    ]\n                  }\n                }\n              },\n              \"description\": \"unexpected error\"\n            }\n          },\n          \"summary\": \"List all pets\"\n        }\n      }\n    },\n    \"servers\": [\n      {\n        \"url\": \"http://petstore.swagger.io/v1\"\n      }\n    ]\n  },\n  \"type\": \"json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/import/openapi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"import",
										"openapi"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"collections\": [\n    {\n      \"id\": \"b31be584-1b1e-4444-b581-761edf88fe77\",\n      \"name\": \"Swagger Petstore\",\n      \"uid\": \"2282-b31be584-1b1e-4444-b581-761edf88fe77\"\n    }\n  ]\n}"
						},
						{
							"id": "ca30e22c-7652-46a3-a85b-9da2ab138c7a",
							"name": "Error: Param Missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\": {\n    \"info\": {\n      \"license\": {\n        \"name\": \"MIT\"\n      },\n      \"title\": \"Swagger Petstore\",\n      \"version\": \"1.0.0\"\n    },\n    \"openapi\": \"3.0.0\",\n    \"paths\": {\n      \"/pets\": {\n        \"get\": {\n          \"operationId\": \"listPets\",\n          \"parameters\": [\n            {\n              \"description\": \"limit\",\n              \"in\": \"query\",\n              \"name\": \"limit\",\n              \"required\": false,\n              \"schema\": {\n                \"format\": \"int32\",\n                \"type\": \"integer\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"default\": {\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"properties\": {\n                      \"code\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"required\": [\n                      \"code\",\n                      \"message\"\n                    ]\n                  }\n                }\n              },\n              \"description\": \"unexpected error\"\n            }\n          },\n          \"summary\": \"List all pets\"\n        }\n      }\n    },\n    \"servers\": [\n      {\n        \"url\": \"http://petstore.swagger.io/v1\"\n      }\n    ]\n  },\n  \"type\": \"json\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/import/openapi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"import",
										"openapi"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"details\": {\n      \"param\": \"type\"\n    },\n    \"message\": \"The request body is missing a value for the type parameter. Check your request and try again.\",\n    \"name\": \"paramMissingError\"\n  }\n}"
						}
					]
				}
			],
			"id": "f6f58275-b6d7-40c5-b8d5-15ff14eedde6"
		},
		{
			"name": "mocks",
			"item": [
				{
					"name": "{mock uid}",
					"item": [
						{
							"name": "Single Mock",
							"id": "cf279cfd-a06f-4acd-87c1-d0eda62ff9b8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mocks/:mock_uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mocks",
										":mock_uid"
									],
									"variable": [
										{
											"key": "mock_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint fetches you the basic information about a single mock using its `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "03e627b5-6511-4b0a-800f-86259d18c629",
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mocks/:mock_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mocks",
												":mock_uid"
											],
											"variable": [
												{
													"key": "mock_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"mock\": {\n    \"collection\": \"1679925-8aa4c661-e0f4-4db0-98bc-d52cb72b5cbf\",\n    \"config\": {\n      \"delay\": null,\n      \"headers\": [],\n      \"matchBody\": false,\n      \"matchQueryParams\": true,\n      \"matchWildcards\": true\n    },\n    \"createdAt\": \"2020-12-14T08:12:21.000Z\",\n    \"environment\": \"1679925-2b90cdd8-e9ac-4086-91c2-bc4cad659511\",\n    \"id\": \"950dcaf2-ec37-4365-b106-ed659cc2ff5d\",\n    \"isPublic\": false,\n    \"mockUrl\": \"https://950dcaf2-ec37-4365-b106-ed659cc2ff5d.mock.pstmn.io\",\n    \"name\": \"mock1\",\n    \"owner\": \"1679925\",\n    \"uid\": \"1679925-950dcaf2-ec37-4365-b106-ed659cc2ff5d\",\n    \"updatedAt\": \"2020-12-15T06:44:37.000Z\"\n  }\n}"
								}
							]
						},
						{
							"name": "Update Mock",
							"id": "e33e4b0f-baa0-46f3-8673-8c8c1d74338f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"mock\": {\n    \"description\": \"example describing update mock description\",\n    \"environment\": \"11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19\",\n    \"name\": \"My Mock Server\",\n    \"private\": false,\n    \"versionTag\": \"abf07d3d-f8ec-47d4-8015-9fe83078b4ec\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mocks/:mock_uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mocks",
										":mock_uid"
									],
									"variable": [
										{
											"key": "mock_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint allows you to update a mock you have created using its `uid`. The endpoint allows you to edit fields,\n* name\n* environment\n* description\n* private\n* versionTag\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "74b3d4ce-3d7c-44fe-a90e-cd229dcc7fb6",
									"name": "success Response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mock\": {\n    \"description\": \"example describing update mock description\",\n    \"environment\": \"11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19\",\n    \"name\": \"My Mock Server\",\n    \"private\": false,\n    \"versionTag\": \"abf07d3d-f8ec-47d4-8015-9fe83078b4ec\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mocks/:mock_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mocks",
												":mock_uid"
											],
											"variable": [
												{
													"key": "mock_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"mock\": {\n    \"collection\": \"11582779-fd6797e2-de6b-4699-975c-85290e4c2499\",\n    \"config\": {\n      \"headers\": [],\n      \"matchBody\": false,\n      \"matchQueryParams\": true,\n      \"matchWildcards\": true\n    },\n    \"environment\": \"11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19\",\n    \"id\": \"06040138-dd6b-4cce-9a02-7e1c1ab59723\",\n    \"mockUrl\": \"https://06040138-dd6b-4cce-9a02-7e1c1ab59723.mock.pstmn.io\",\n    \"name\": \"My Mock Server\",\n    \"owner\": \"11582779\",\n    \"uid\": \"11582779-06040138-dd6b-4cce-9a02-7e1c1ab59723\"\n  }\n}"
								}
							]
						},
						{
							"name": "Delete Mock",
							"id": "f5dd54a5-dd00-4821-bd12-17670d19d2b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mocks/:mock_uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mocks",
										":mock_uid"
									],
									"variable": [
										{
											"key": "mock_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint allows you to delete an existing mock using its `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "835ad7eb-f52f-4f4b-b646-446fc849f1a6",
									"name": "Successful Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mocks/:mock_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mocks",
												":mock_uid"
											],
											"variable": [
												{
													"key": "mock_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"mock\": {\n    \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n    \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n  }\n}"
								}
							]
						},
						{
							"name": "Publish Mock",
							"id": "ee191ee3-91e1-44cb-848b-c856abc17139",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mocks/:mock_uid/publish",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mocks",
										":mock_uid",
										"publish"
									],
									"variable": [
										{
											"key": "mock_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint publishes the mock you have created using its `uid`\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key ` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "1cdc82f4-0660-463d-8d95-ffc6557317c8",
									"name": "Success Response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mocks/:mock_uid/publish",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mocks",
												":mock_uid",
												"publish"
											],
											"variable": [
												{
													"key": "mock_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"mock\": {\n    \"id\": \"06040138-dd6b-4cce-9a02-7e1c1ab59723\"\n  }\n}"
								}
							]
						},
						{
							"name": "Unpublish Mock",
							"id": "5d49c365-207a-4436-a22d-03aa88b21529",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mocks/:mock_uid/unpublish",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mocks",
										":mock_uid",
										"unpublish"
									],
									"variable": [
										{
											"key": "mock_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint unpublishes the mock you have created using its `uid`\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key ` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "1cb02a00-7627-4180-bdee-d03f4d8db087",
									"name": "Success Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/mocks/:mock_uid/unpublish",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mocks",
												":mock_uid",
												"unpublish"
											],
											"variable": [
												{
													"key": "mock_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"mock\": {\n    \"id\": \"06040138-dd6b-4cce-9a02-7e1c1ab59723\"\n  }\n}"
								}
							]
						}
					],
					"id": "0cde2254-74ce-4180-b0b2-f4a8d450bd0f"
				},
				{
					"name": "All Mocks",
					"id": "120fbd2b-a9bb-4d39-8b2f-f1f682af7e79",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/mocks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mocks"
							]
						},
						"description": "This endpoint fetches all the mocks that you have created.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
					},
					"response": [
						{
							"id": "c683e4c7-dfb7-4113-ade7-6ec81e1af768",
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mocks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"mocks\": [\n    {\n      \"collection\": \"1686168-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n      \"config\": {\n        \"delay\": null,\n        \"headers\": [],\n        \"matchBody\": false,\n        \"matchQueryParams\": true,\n        \"matchWildcards\": true\n      },\n      \"createdAt\": \"2020-12-15T06:44:37.000Z\",\n      \"environment\": \"1686168-2b90cdd8-e9ac-4086-91c2-bc4cad659511\",\n      \"id\": \"e782b64e-406b-4a6c-8fe9-9ebe84aeb706\",\n      \"isPublic\": false,\n      \"mockUrl\": \"https://e782b64e-406b-4a6c-8fe9-9ebe84aeb706.mock.pstmn.io\",\n      \"name\": \"mock1\",\n      \"owner\": \"1686168\",\n      \"uid\": \"1686168-e782b64e-406b-4a6c-8fe9-9ebe84aeb706\",\n      \"updatedAt\": \"2020-12-15T06:44:37.000Z\"\n    },\n    {\n      \"collection\": \"1686168-37eeb72f-5d3e-48b4-8022-6b9cca6d2664\",\n      \"config\": {\n        \"delay\": null,\n        \"headers\": [],\n        \"matchBody\": false,\n        \"matchQueryParams\": true,\n        \"matchWildcards\": true\n      },\n      \"createdAt\": \"2020-11-15T06:44:37.000Z\",\n      \"id\": \"8f9d4b95-780d-455d-af38-772277bc9393\",\n      \"isPublic\": true,\n      \"mockUrl\": \"https://8f9d4b95-780d-455d-af38-772277bc93936.mock.pstmn.io\",\n      \"name\": \"mock2\",\n      \"owner\": \"1686168\",\n      \"uid\": \"1686168-8f9d4b95-780d-455d-af38-772277bc9393\",\n      \"updatedAt\": \"2020-12-15T06:48:37.000Z\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Mock",
					"id": "98b30753-4d57-4eac-a380-e6c1bbb6a4dd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"mock\": {\n    \"collection\": \"1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n    \"environment\": \"1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/mocks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mocks"
							]
						},
						"description": "This endpoint allows you to create a mock on a collection. You can also provide an environment UID to resolve any environment variables in the collection.\n\nYou can also specify the context of a workspace to create a mock in directly by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
					},
					"response": [
						{
							"id": "ab30d25c-5f68-4644-87b2-27c131fabeff",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"mock\": {\n    \"collection\": \"1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n    \"environment\": \"1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mocks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"mock\": {\n    \"collection\": \"1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n    \"environment\": \"1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524\",\n    \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n    \"mockUrl\": \"https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io\",\n    \"owner\": \"1679925\",\n    \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n  }\n}"
						}
					]
				}
			],
			"id": "710321a8-6668-4219-8015-4ff26c809666"
		},
		{
			"name": "monitors",
			"item": [
				{
					"name": "{monitor uid}",
					"item": [
						{
							"name": "Single Monitor",
							"id": "54bf2f8c-a109-44df-86ff-5ce75ec1e03e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitors/:monitor_uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitors",
										":monitor_uid"
									],
									"variable": [
										{
											"key": "monitor_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint fetches you basic information about the monitor using its `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "d512c563-b78d-404f-a147-f8f8ab18f434",
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitors/:monitor_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitors",
												":monitor_uid"
											],
											"variable": [
												{
													"key": "monitor_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"monitor\": {\n    \"collectionUid\": \"5852-8d05dd85-222c-1452-553b-e76a531b71ed\",\n    \"distribution\": [],\n    \"environmentUid\": \"5851-8d05dd85-222c-1452-553b-e76a531b71ed\",\n    \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n    \"lastRun\": {\n      \"finishedAt\": \"2020-03-25T15:45:31.340Z\",\n      \"startedAt\": \"2020-03-25T15:45:29.218Z\",\n      \"stats\": {\n        \"assertions\": {\n          \"failed\": 1,\n          \"total\": 8\n        },\n        \"requests\": {\n          \"total\": 4\n        }\n      },\n      \"status\": \"failed\"\n    },\n    \"name\": \"Postman Echo Monitor\",\n    \"notifications\": {\n      \"onError\": [\n        {\n          \"email\": \"john.appleseed@example.com\"\n        }\n      ],\n      \"onFailure\": [\n        {\n          \"email\": \"john.appleseed@example.com\"\n        }\n      ]\n    },\n    \"options\": {\n      \"followRedirects\": true,\n      \"requestDelay\": 0,\n      \"requestTimeout\": 3000,\n      \"strictSSL\": true\n    },\n    \"owner\": \"5852\",\n    \"schedule\": {\n      \"cron\": \"0 0 * * * *\",\n      \"nextRun\": \"2016-11-30T09:30:00.000Z\",\n      \"timezone\": \"Asia/Calcutta\"\n    },\n    \"uid\": \"5852-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n  }\n}"
								},
								{
									"id": "8b9f3178-e5bd-49e4-9d04-2e3ddc4b2d4c",
									"name": "Monitor Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitors/:monitor_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitors",
												":monitor_uid"
											],
											"variable": [
												{
													"key": "monitor_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"message\": \"The specified monitor does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}"
								}
							]
						},
						{
							"name": "Update Monitor",
							"id": "f7785274-6625-4f50-8fb5-e5c6352d55a1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"monitor\": {\n    \"name\": \"Updated Monitor Name\",\n    \"schedule\": {\n      \"cron\": \"*/5 * * * *\",\n      \"timezone\": \"America/Chicago\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/monitors/:monitor_uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitors",
										":monitor_uid"
									],
									"variable": [
										{
											"key": "monitor_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint allows you to update a monitor using its `uid`. Only the monitor name and its schedule can be updated.\n\nSome example `cron` values are:\n\n| Frequency                  | Cron Pattern   |\n|-----------------------|----------------|\n| Every 5 minutes       | `*/5 * * * *`  |\n| Every 30 minutes     | `*/30 * * * *` |\n| Every Hour         | `0 */1 * * *`  |\n| Every 6 Hours      | `0 */6 * * *`  |\n| Every day at 5pm    | `0 17 * * *`   |\n| Every Monday at 12pm  | `0 12 * * MON` |\n| Every weekday (Monday - Friday) at 6am | `0 6 * * MON-FRI` |\n\nNote: Currently, you can only create monitors at some limited schedules. You can head to [Postman Monitors](https://monitor.getpostman.com) to see the allowed schedules. \n\nFor more information about the format of the `timezone` value, check this [list of time zones.](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "88d2dd03-d695-412f-878a-f94e9769b6c8",
									"name": "Monitor Updated",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"monitor\": {\n    \"name\": \"Updated Monitor Name\",\n    \"schedule\": {\n      \"cron\": \"*/5 * * * *\",\n      \"timezone\": \"America/Chicago\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/monitors/:monitor_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitors",
												":monitor_uid"
											],
											"variable": [
												{
													"key": "monitor_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"monitor\": {\n    \"id\": \"1e6b6e2a-c2ad-4090-b750-0df4e6624352\",\n    \"name\": \"Updated Monitor Name\",\n    \"uid\": \"5852-1e6b6e2a-c2ad-4090-b750-0df4e6624352\"\n  }\n}"
								}
							]
						},
						{
							"name": "Delete Monitor",
							"id": "744fb684-c360-46c2-8271-70f6b65a64a1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitors/:monitor_uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitors",
										":monitor_uid"
									],
									"variable": [
										{
											"key": "monitor_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint can be used to delete an existing monitor using its `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "17e183a7-8d4e-45a3-9d17-6fa3f29a9029",
									"name": "Monitor Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitors/:monitor_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitors",
												":monitor_uid"
											],
											"variable": [
												{
													"key": "monitor_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"monitor\": {\n    \"id\": \"1e6b8957-35f9-42a0-8d2f-f03d7085b3d2\",\n    \"uid\": \"5852-1e6b8957-35f9-42a0-8d2f-f03d7085b3d2\"\n  }\n}"
								},
								{
									"id": "56420949-5b5e-4ac6-b623-f0b8c67e61ce",
									"name": "Monitor Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitors/:monitor_uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitors",
												":monitor_uid"
											],
											"variable": [
												{
													"key": "monitor_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"message\": \"The specified monitor does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}"
								}
							]
						},
						{
							"name": "Run a Monitor",
							"id": "293bfc01-511d-4e42-8a87-936749ab37a9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/monitors/:monitor_uid/run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitors",
										":monitor_uid",
										"run"
									],
									"variable": [
										{
											"key": "monitor_uid",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint will run the monitor instantly and wait for the monitor to run completely. It responds with the run results.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "8b9fbda1-3654-4008-8e52-e88b05ad322a",
									"name": "Monitor Run with Errors",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitors/:monitor_uid/run",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitors",
												":monitor_uid",
												"run"
											],
											"variable": [
												{
													"key": "monitor_uid",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"run\": {\n    \"executions\": [\n      {\n        \"id\": 1,\n        \"item\": {\n          \"id\": \"b5e8d7dd-909c-4ba7-aef4-8609bc50b586\",\n          \"name\": \"Sample POST Request\"\n        },\n        \"request\": {\n          \"body\": {\n            \"contentLength\": 18,\n            \"mode\": \"raw\"\n          },\n          \"headers\": {\n            \"accept\": \"*/*\",\n            \"accept-encoding\": \"gzip, deflate\",\n            \"content-length\": 18,\n            \"content-type\": \"application/json\"\n          },\n          \"method\": \"POST\",\n          \"timestamp\": \"2016-12-04T14:30:26.025Z\",\n          \"url\": \"echo.getpostman.com/post\"\n        },\n        \"response\": {\n          \"body\": {\n            \"contentLength\": 298\n          },\n          \"code\": 200,\n          \"headers\": {\n            \"connection\": \"keep-alive\",\n            \"content-encoding\": \"gzip\",\n            \"content-type\": \"application/json\",\n            \"date\": \"Sun, 04 Dec 2016 14:30:26 GMT\",\n            \"transfer-encoding\": \"chunked\"\n          },\n          \"responseSize\": 298,\n          \"responseTime\": 26\n        }\n      },\n      {\n        \"assertions\": {\n          \"Status code is 400\": false\n        },\n        \"id\": 2,\n        \"item\": {\n          \"id\": \"f790d046-755d-44f5-a416-b825e18dfd9d\",\n          \"name\": \"Sample GET Request\"\n        },\n        \"request\": {\n          \"body\": {\n            \"contentLength\": 0,\n            \"mode\": \"formdata\"\n          },\n          \"headers\": {\n            \"accept\": \"*/*\",\n            \"accept-encoding\": \"gzip, deflate\"\n          },\n          \"method\": \"GET\",\n          \"timestamp\": \"2016-12-04T14:30:26.093Z\",\n          \"url\": \"echo.getpostman.com/get\"\n        },\n        \"response\": {\n          \"body\": {\n            \"contentLength\": 280\n          },\n          \"code\": 200,\n          \"headers\": {\n            \"connection\": \"keep-alive\",\n            \"content-encoding\": \"gzip\",\n            \"content-type\": \"application/json\",\n            \"date\": \"Sun, 04 Dec 2016 14:30:26 GMT\",\n            \"transfer-encoding\": \"chunked\"\n          },\n          \"responseSize\": 280,\n          \"responseTime\": 46\n        }\n      },\n      {\n        \"id\": 3,\n        \"item\": {\n          \"id\": \"336e6e17-6d3e-4b8f-a48f-b7e75cf13afb\",\n          \"name\": \"This is the second request\"\n        },\n        \"request\": {\n          \"body\": {\n            \"contentLength\": 0,\n            \"mode\": \"formdata\"\n          },\n          \"headers\": {\n            \"accept\": \"*/*\",\n            \"accept-encoding\": \"gzip, deflate\",\n            \"content-length\": 18\n          },\n          \"method\": \"POST\",\n          \"timestamp\": \"2016-12-04T14:30:26.477Z\",\n          \"url\": \"echo.getpostman.com/post\"\n        },\n        \"response\": {\n          \"body\": {\n            \"contentLength\": 345\n          },\n          \"code\": 200,\n          \"headers\": {\n            \"connection\": \"keep-alive\",\n            \"content-encoding\": \"gzip\",\n            \"content-type\": \"application/json\",\n            \"date\": \"Sun, 04 Dec 2016 14:30:26 GMT\",\n            \"transfer-encoding\": \"chunked\"\n          },\n          \"responseSize\": 345,\n          \"responseTime\": 9\n        }\n      }\n    ],\n    \"failures\": [\n      {\n        \"assertion\": {\n          \"Status code is 400\": false\n        },\n        \"executionId\": 2,\n        \"message\": \"Expected 'Status code is 400' to be truthy\",\n        \"name\": \"AssertionError\"\n      }\n    ],\n    \"info\": {\n      \"collectionUid\": \"5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55\",\n      \"finishedAt\": \"2016-12-04T14:30:26.000Z\",\n      \"jobId\": \"1e6ba2e3-1aaf-4c10-bd5f-905943284b2a\",\n      \"monitorId\": \"1e6b8970-fd13-4480-b011-b3b3e3cd271d\",\n      \"name\": \"Sample Collection monitor 1 #56\",\n      \"startedAt\": \"2016-12-04T14:30:25.000Z\",\n      \"status\": \"failed\"\n    },\n    \"stats\": {\n      \"assertions\": {\n        \"failed\": 1,\n        \"total\": 1\n      },\n      \"requests\": {\n        \"failed\": 1,\n        \"total\": 3\n      }\n    }\n  }\n}"
								}
							]
						}
					],
					"id": "f5a1903d-ac37-4e92-a9ef-2da02c3dfd69"
				},
				{
					"name": "All Monitors",
					"id": "972b4aef-15a6-4e5d-8232-a60b3f0aa24d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/monitors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitors"
							]
						},
						"description": "The `/monitors` endpoint returns a list of all [monitors](https://monitor.getpostman.com/) that are accessible by you.\n\nThe response contains an array of monitors information containing the `name`, `id`, `owner` and `uid` of each monitor.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
					},
					"response": [
						{
							"id": "f15e526c-699c-4232-b1ef-59bac814db6a",
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"monitors\": [\n    {\n      \"id\": \"1e6b6c77-2031-42d0-9948-76d7251b2dd1\",\n      \"name\": \"Batman & Sherlock Holmes Monitor\",\n      \"owner\": \"5852\",\n      \"uid\": \"5852-1e6b6c77-2031-42d0-9948-76d7251b2dd1\"\n    },\n    {\n      \"id\": \"1e6b6cb7-f13d-4000-acb7-0695757174a8\",\n      \"name\": \"Team Level Monitor\",\n      \"owner\": \"5886\",\n      \"uid\": \"5886-1e6b6cb7-f13d-4000-acb7-0695757174a8\"\n    },\n    {\n      \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n      \"name\": \"Postman Echo Monitor\",\n      \"owner\": \"5852\",\n      \"uid\": \"5852-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Monitor",
					"id": "ae572fc0-8769-4d11-9d37-d4cd34502439",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"monitor\": {\n    \"collection\": \"5852-8d05dd85-222c-1452-553b-e76a531b71ed\",\n    \"environment\": \"5852-8a4c21ea-2a36-40d1-a82d-d717fac9d6ef\",\n    \"name\": \"This is a Monitor Name\",\n    \"schedule\": {\n      \"cron\": \"0 0 * * *\",\n      \"timezone\": \"Asia/Kolkata\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/monitors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"monitors"
							]
						},
						"description": "This endpoint allows you to create a monitor.\n\nSome sample `cron` values are:\n\n| Frequency                  | Cron Pattern   |\n|-----------------------|----------------|\n| Every 5 minutes       | `*/5 * * * *`  |\n| Every 30 minutes     | `*/30 * * * *` |\n| Every Hour         | `0 */1 * * *`  |\n| Every 6 Hours      | `0 */6 * * *`  |\n| Every day at 5pm    | `0 17 * * *`   |\n| Every Monday at 12pm  | `0 12 * * MON` |\n| Every weekday (Monday - Friday) at 6am | `0 6 * * MON-FRI` |\n\nNote: Currently, you can only create monitors at some limited schedules. You can head to [Postman Monitors](https://monitor.getpostman.com) to see the allowed schedules. \n\nFor more information about the format of the `timezone` value, check this [list of time zones.](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n\nYou can also specify the context of a workspace to create a monitor in directly by passing the `workspace` as a query param.\n\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
					},
					"response": [
						{
							"id": "4b625b90-3e71-46ce-89e4-f657aab271bb",
							"name": "Create Monitor in a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"monitor\": {\n    \"collection\": \"5852-8d05dd85-222c-1452-553b-e76a531b71ed\",\n    \"environment\": \"5852-8a4c21ea-2a36-40d1-a82d-d717fac9d6ef\",\n    \"name\": \"This is a Monitor Name\",\n    \"schedule\": {\n      \"cron\": \"0 0 * * *\",\n      \"timezone\": \"Asia/Kolkata\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/monitors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"monitor\": {\n    \"id\": \"1e6b6dfd-7ba4-4590-9ee1-5948102d7797\",\n    \"name\": \"Monitor Name\",\n    \"uid\": \"5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797\"\n  }\n}"
						},
						{
							"id": "441dde93-e253-4f6c-b242-98c78506b9cf",
							"name": "Parameter Missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"monitor\": {\n    \"collection\": \"5852-8d05dd85-222c-1452-553b-e76a531b71ed\",\n    \"environment\": \"5852-8a4c21ea-2a36-40d1-a82d-d717fac9d6ef\",\n    \"name\": \"This is a Monitor Name\",\n    \"schedule\": {\n      \"cron\": \"0 0 * * *\",\n      \"timezone\": \"Asia/Kolkata\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/monitors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitors"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"details\": {\n      \"param\": \"monitor\"\n    },\n    \"message\": \"Parameter is missing in the request.\",\n    \"name\": \"paramMissingError\"\n  }\n}"
						}
					]
				}
			],
			"id": "b17629b6-d2d2-4380-b018-28f18d35a864"
		},
		{
			"name": "scim/v2",
			"item": [
				{
					"name": "Users",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Fetch User Resource",
									"id": "7e279bac-f6e3-441a-9db8-230e8a8b5d96",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										},
										"description": "Fetches an individual Postman team member's information."
									},
									"response": [
										{
											"id": "9586409d-87bb-4521-99dc-c71f868c16a7",
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "853ccad7-815b-45df-a583-fbc975792605",
											"name": "400 - Invalid team",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"This Postman team doesn’t exist anymore.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"400\"\n}"
										},
										{
											"id": "fd7b11ca-acab-49ff-8f35-c5f599a233fc",
											"name": "401 - Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"401\"\n}"
										},
										{
											"id": "2bc69ba7-ba9a-405c-80f5-b3bb09f76f37",
											"name": "403 - Admin team mismatch",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"403\"\n}"
										},
										{
											"id": "9adf337b-8226-49da-aa1d-02fa451e4357",
											"name": "404 - User Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"This person isn’t a member of the team.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"404\"\n}"
										},
										{
											"id": "fefaa930-52de-4ebb-90d7-631b09a96ff5",
											"name": "429 - Rate limit exceeded",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": 429\n}"
										},
										{
											"id": "5fb30b81-01e2-4495-95f7-4f71f177c11c",
											"name": "500 - Something went wrong",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"Unable to fetch information about this team member.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"500\"\n}"
										}
									]
								},
								{
									"name": "Update User Information",
									"id": "ce163561-c7f3-4a75-9dfd-e79a6063ef50",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										},
										"description": "Updates a user’s first and last name in Postman. \n\n> Only updates made to the user’s given and family name via the SCIM API will be pushed to Postman. No other user attributes can be updated in Postman using the SCIM API."
									},
									"response": [
										{
											"id": "e9c1a222-a184-4acc-8cc4-ec218c99e707",
											"name": "200",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n  \"meta\": {\n    \"created\": \"2021-02-22T04:24:13.000Z\",\n    \"lastModified\": \"2021-02-22T04:24:13.000Z\",\n    \"resourceType\": \"User\"\n  },\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"test.user@okta.local\"\n}"
										},
										{
											"id": "b0bdf729-c7d7-4ea4-8e5f-a56b8d669d0b",
											"name": "400 - Invalid payload",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"The request body seems to be incomplete or have unsupported characters.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"scimType\": \"invalidSyntax\",\n  \"status\": \"400\"\n}"
										},
										{
											"id": "d39487f7-bc7a-410f-b6dd-308708e14e5d",
											"name": "401 - Invalid API key",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"401\"\n}"
										},
										{
											"id": "9a7d485c-00d1-4cff-a2cc-5b5ca1fbd121",
											"name": "403 - User not in Team",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"This person isn’t a member of the team.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"403\"\n}"
										},
										{
											"id": "1f695c58-79e9-4234-add8-eba561f22811",
											"name": "404 - User Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"This person isn’t a member of the team.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"404\"\n}"
										},
										{
											"id": "e887b32c-9a13-417c-be6d-b6451f5e1d46",
											"name": "429 - Rate limit exceeded",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": 429\n}"
										},
										{
											"id": "d63427ea-b6d7-4d11-97f0-9267a9a9ed7d",
											"name": "500 - Something went wrong",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"Couldn’t update this team member’s information. Try again — it should work next time around.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"500\"\n}"
										}
									]
								},
								{
									"name": "Update User Information",
									"id": "295ad14d-c0aa-4428-a3db-cc39a59481e7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"Operations\": [\n    {\n      \"op\": \"replace\",\n      \"value\": {\n        \"active\": false\n      }\n    }\n  ],\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										},
										"description": "Updates user state in Postman:\n  * **Activate User**: Creates a new user on your Postman team, if one does not already exist, and activates the user to authenticate into your Postman team.\n  * **Deactivate User**: Removes a user from your Postman team and deactivates their account, blocking the account from authenticating into Postman.\n  > The user account and the data corresponding to it will not be deleted. To permanently delete the user account and their data, [contact Postman support](https://www.postman.com/support/).\n  * **Reactivate Users**: Reactivates an existing deactivated user by unblocking the account's authentication into Postman and adds the account back on to your Postman team."
									},
									"response": [
										{
											"id": "09f6bb49-3ba2-42b0-b1dc-255a8e9b26c9",
											"name": "200",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"Operations\": [\n    {\n      \"op\": \"replace\",\n      \"value\": {\n        \"active\": false\n      }\n    }\n  ],\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"active\": false,\n  \"externalId\": \"23123123\",\n  \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n  \"meta\": {\n    \"created\": \"2021-02-22T04:24:13.000Z\",\n    \"lastModified\": \"2021-02-22T04:24:13.000Z\",\n    \"resourceType\": \"User\"\n  },\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}"
										},
										{
											"id": "6cff608e-81cc-4988-996a-731039bd0c8c",
											"name": "400 - Invalid team",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"Operations\": [\n    {\n      \"op\": \"replace\",\n      \"value\": {\n        \"active\": false\n      }\n    }\n  ],\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"Team doesn't exist.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"400\"\n}"
										},
										{
											"id": "385a8494-b59a-4f71-8c50-12414bd6d778",
											"name": "401 - Unauthorized",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"Operations\": [\n    {\n      \"op\": \"replace\",\n      \"value\": {\n        \"active\": false\n      }\n    }\n  ],\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"401\"\n}"
										},
										{
											"id": "3c61d420-0b63-4a51-bb74-ba17ab3f894c",
											"name": "403 - Admin team mismatch",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"Operations\": [\n    {\n      \"op\": \"replace\",\n      \"value\": {\n        \"active\": false\n      }\n    }\n  ],\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"403\"\n}"
										},
										{
											"id": "73e58183-4e96-4270-9b86-ef8b0a8b3b8d",
											"name": "404 - User Not Found",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"Operations\": [\n    {\n      \"op\": \"replace\",\n      \"value\": {\n        \"active\": false\n      }\n    }\n  ],\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"This person isn’t a member of the team.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"404\"\n}"
										},
										{
											"id": "8808dde3-b4b4-4c4c-981c-ad2542ca28c1",
											"name": "429 - Rate limit exceeded",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"Operations\": [\n    {\n      \"op\": \"replace\",\n      \"value\": {\n        \"active\": false\n      }\n    }\n  ],\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": 429\n}"
										},
										{
											"id": "b3ce4b5a-7f19-466a-b564-64b2c8deb9fc",
											"name": "500 - Something went wrong",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"Operations\": [\n    {\n      \"op\": \"replace\",\n      \"value\": {\n        \"active\": false\n      }\n    }\n  ],\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:PatchOp\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/scim/v2/Users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scim",
														"v2",
														"Users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "cillum tempor irure deserunt mo",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"Couldn’t update this team member’s information. Try again — it should work next time around.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"500\"\n}"
										}
									]
								}
							],
							"id": "714c54cf-a71f-45d9-a9e5-4263cab42e7c"
						},
						{
							"name": "Fetch All User Resource",
							"id": "ce876de2-c8db-4b8e-85ec-81cdd17ce68f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/Users?startIndex=1&count=100&filter=userName eq 'test%40domain.com'",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"Users"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "1"
										},
										{
											"key": "count",
											"value": "100"
										},
										{
											"key": "filter",
											"value": "userName eq 'test%40domain.com'"
										}
									]
								},
								"description": "Fetches information on all Postman team members. You can fetch information for a particular user with filters.\n\nNote: By default, this endpoint will return a list of hundred users. To overwrite the default setting, update the 'startIndex=1&count=100' value in the request."
							},
							"response": [
								{
									"id": "9cf370b5-d603-4d6b-8946-931c449fe045",
									"name": "200 No results",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users?startIndex=1&count=100&filter=userName eq 'test%40domain.com'",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1"
												},
												{
													"key": "count",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "userName eq 'test%40domain.com'"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"Resources\": [],\n  \"itemsPerPage\": 0,\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n  ],\n  \"startIndex\": 1,\n  \"totalResults\": 0\n}"
								},
								{
									"id": "ca67e765-763f-4c07-9703-dc02bbfc53d6",
									"name": "400 - Using incorrect/unsupported filter",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users?startIndex=1&count=100&filter=userName eq 'test%40domain.com'",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1"
												},
												{
													"key": "count",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "userName eq 'test%40domain.com'"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"You’ve used filter(s) that Postman doesn’t support.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"400\"\n}"
								},
								{
									"id": "09dadbf3-1a46-4ff6-b6c9-10da2884c98e",
									"name": "401 - Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users?startIndex=1&count=100&filter=userName eq 'test%40domain.com'",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1"
												},
												{
													"key": "count",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "userName eq 'test%40domain.com'"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"401\"\n}"
								},
								{
									"id": "8a154e2f-0731-4746-8f7c-1bc0383650ec",
									"name": "403 - Admin team mismatch",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users?startIndex=1&count=100&filter=userName eq 'test%40domain.com'",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1"
												},
												{
													"key": "count",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "userName eq 'test%40domain.com'"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"TYour API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"403\"\n}"
								},
								{
									"id": "bfe94f89-b809-45ec-9677-cb6a78751de1",
									"name": "429 - Rate limit exceeded",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users?startIndex=1&count=100&filter=userName eq 'test%40domain.com'",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1"
												},
												{
													"key": "count",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "userName eq 'test%40domain.com'"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"That’s 300 attempts in less than a minute. Wait for a minute and then try again.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": 429\n}"
								},
								{
									"id": "ab58dba7-fb9f-4ba5-8720-1c0a9ca433ad",
									"name": "500 - Something went wrong",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users?startIndex=1&count=100&filter=userName eq 'test%40domain.com'",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											],
											"query": [
												{
													"key": "startIndex",
													"value": "1"
												},
												{
													"key": "count",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "userName eq 'test%40domain.com'"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"Couldn’t fetch members of the team.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"500\"\n}"
								}
							]
						},
						{
							"name": "Create User",
							"id": "48e311bb-37d9-4f0e-ac15-6b43221ce0a1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/Users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"Users"
									]
								},
								"description": "Creates a new user account in Postman, adds the user to your organization's Postman team, and activates the user to authenticate into your Postman team, provided an account with the same email ID does not already exist in Postman. The newly added user will have the `developer` role in Postman by default. You can later [update user roles in Postman](/docs/administration/managing-your-team/managing-your-team/#managing-roles).\n\nIf an account with the same email ID does exist, an [email invite](https://learning.postman.com/docs/administration/managing-your-team/managing-your-team/#invites) to join your Postman team is sent to the user. Once the user accepts the invite, they will be added to your team."
							},
							"response": [
								{
									"id": "50dbcbce-55e4-4b31-9af6-ae8f0d069f01",
									"name": "201 - User Creation Successful",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"id\": \"405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99\",\n  \"meta\": {\n    \"created\": \"2021-02-22T04:24:13.000Z\",\n    \"lastModified\": \"2021-02-22T04:24:13.000Z\",\n    \"resourceType\": \"User\"\n  },\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"testUser@postman.local\"\n}"
								},
								{
									"id": "bef981a4-7fe5-41f4-b06c-10338de8a5bc",
									"name": "400 - Invalid team",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"This Postman team doesn’t exist anymore.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"400\"\n}"
								},
								{
									"id": "d8c4ae27-bc8e-4641-855a-918a11917ca8",
									"name": "401 - Invalid API key",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"Unable to access the team. Check if you have entered a valid API key.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"401\"\n}"
								},
								{
									"id": "4595cee7-60ef-475e-a671-2816fbefa028",
									"name": "403 - Admin team mismatch",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"403\"\n}"
								},
								{
									"id": "7987dc0f-c480-43f6-a81a-4ebc5058e019",
									"name": "409 - User already exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"This person is already a member of the team.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"scimType\": \"uniqueness\",\n  \"status\": \"409\"\n}"
								},
								{
									"id": "6ed8a5b4-97cf-46d5-a56d-88dc945f2be5",
									"name": "429 - Rate limit exceeded",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"That’s 180 attempts in less than a minute. Wait for a minute and then try again.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": 429\n}"
								},
								{
									"id": "484d9166-f5e0-4a8c-bb3f-d7e2a3957c7d",
									"name": "500 - Something went wrong",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"active\": true,\n  \"externalId\": \"23123123\",\n  \"groups\": [],\n  \"locale\": \"en-US\",\n  \"name\": {\n    \"familyName\": \"User\",\n    \"givenName\": \"Test\"\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n  ],\n  \"userName\": \"{{userEmail}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scim/v2/Users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scim",
												"v2",
												"Users"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"Unable to add members to the team. Try again — it should work next time around.\",\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:Error\"\n  ],\n  \"status\": \"500\"\n}"
								}
							]
						}
					],
					"id": "d122bd3f-15dc-4453-ba12-f3cddd3fe9ac"
				},
				{
					"name": "Get ResourceTypes",
					"id": "ac939cb4-57aa-4a41-bf6c-d09d2a8adc26",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/scim/v2/ResourceTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scim",
								"v2",
								"ResourceTypes"
							]
						},
						"description": "Returns all the resource types supported by Postman's SCIM API."
					},
					"response": [
						{
							"id": "b005cac5-a5de-4c5b-a182-9642534c7f0f",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/ResourceTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"ResourceTypes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Service Provider Config",
					"id": "ea4c7b54-4782-4e99-ae68-34aba6185461",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/scim/v2/ServiceProviderConfig",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scim",
								"v2",
								"ServiceProviderConfig"
							]
						},
						"description": "Returns configuration details for Postman's SCIM API, including the list of operations that are supported."
					},
					"response": [
						{
							"id": "10a73b4f-8149-4af6-afb2-b071c0d1c904",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/ServiceProviderConfig",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"ServiceProviderConfig"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"authenticationSchemes\": [\n    {\n      \"description\": \"Authentication scheme using the OAuth Bearer Token Standard\",\n      \"name\": \"OAuth Bearer Token\",\n      \"specUri\": \"http://www.rfc-editor.org/info/rfc6750\",\n      \"type\": \"oauthbearertoken\"\n    }\n  ],\n  \"bulk\": {\n    \"maxOperations\": 0,\n    \"maxPayloadSize\": 0,\n    \"supported\": false\n  },\n  \"changePassword\": {\n    \"supported\": false\n  },\n  \"documentationUri\": \"https://learning.postman.com/docs/administration/managing-your-team/configuring-scim\",\n  \"etag\": {\n    \"supported\": false\n  },\n  \"filter\": {\n    \"maxResults\": 100,\n    \"supported\": true\n  },\n  \"meta\": {\n    \"location\": \"{{url}}/scim/v2/ServiceProviderConfig\",\n    \"resourceType\": \"ServiceProviderConfig\"\n  },\n  \"patch\": {\n    \"supported\": true\n  },\n  \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig\"\n  ],\n  \"sort\": {\n    \"supported\": false\n  }\n}"
						}
					]
				}
			],
			"id": "5990a105-a953-4cd5-a738-64a97a97101e"
		},
		{
			"name": "workspaces",
			"item": [
				{
					"name": "{workspace id}",
					"item": [
						{
							"name": "Single workspace",
							"id": "55d5217c-4457-4c1f-b74d-de72e30af9cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workspaces/:workspace_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										":workspace_id"
									],
									"variable": [
										{
											"key": "workspace_id",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "Access the contents of a workspace that is accessible to you using its id (`id`). Includes the collections, environments, mocks and monitors of that workspace.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "eff1ec4e-f7d3-411c-83d2-8af37202e537",
									"name": "Valid Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/workspaces/:workspace_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workspaces",
												":workspace_id"
											],
											"variable": [
												{
													"key": "workspace_id",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"workspace\": {\n    \"collections\": [\n      {\n        \"id\": \"7c31b469-bd43-4411-9283-6d397855ee0e\",\n        \"name\": \"Mock demo - collection\",\n        \"uid\": \"1234-7c31b469-bd43-4411-9283-6d397855ee0e\"\n      },\n      {\n        \"id\": \"356fe068-a0f8-4f31-b34d-d12149eac681\",\n        \"name\": \"Mock demo - response code\",\n        \"uid\": \"1234-356fe068-a0f8-4f31-b34d-d12149eac681\"\n      }\n    ],\n    \"description\": \"Demos.\",\n    \"environments\": [\n      {\n        \"id\": \"423fd955-a9c8-47cd-9ab0-09a6a575c4be\",\n        \"name\": \"Mock demo - CNX\",\n        \"uid\": \"1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be\"\n      },\n      {\n        \"id\": \"24c45c84-5147-4c15-bb9a-c3186b81d3cc\",\n        \"name\": \"Mock Demo - response code\",\n        \"uid\": \"1234-24c45c84-5147-4c15-bb9a-c3186b81d3cc\"\n      }\n    ],\n    \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n    \"name\": \"Demo workspace\",\n    \"type\": \"personal\"\n  }\n}"
								},
								{
									"id": "fba61671-b87a-424d-9ff5-7eb1b374b0ae",
									"name": "Workspace Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/workspaces/:workspace_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workspaces",
												":workspace_id"
											],
											"variable": [
												{
													"key": "workspace_id",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"message\": \"Instance not found in the database.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}"
								}
							]
						},
						{
							"name": "Update Workspace",
							"id": "881c5896-e0af-4be2-87ae-787baf842520",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workspace\": {\n    \"collections\": [\n      {\n        \"id\": \"e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\",\n        \"name\": \"Straw hats\",\n        \"uid\": \"8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\"\n      }\n    ],\n    \"description\": \"Some description\",\n    \"environments\": [\n      {\n        \"id\": \"83a1aaa2-a204-4bd8-9b92-4d486918906b\",\n        \"name\": \"env\",\n        \"uid\": \"8154-83a1aaa2-a204-4bd8-9b92-4d486918906b\"\n      }\n    ],\n    \"mocks\": [\n      {\n        \"id\": \"cda672ef-1375-40e9-baee-e20ece8d7b65\"\n      }\n    ],\n    \"monitors\": [\n      {\n        \"id\": \"1e889bd2-3862-4be0-b2c2-9b1fe9673aec\"\n      }\n    ],\n    \"name\": \"New Workspace updated\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workspaces/:workspace_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										":workspace_id"
									],
									"variable": [
										{
											"key": "workspace_id",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint allows you to update a workspace and update it's association to entities like `collections`, `environments`, `mocks` and `monitors` using their `uid`.\n\nOn successful updation of the workspace, the response returns the workspcae `name` and `id`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.\n\n**Note** : The endpoint expects you to send the desired state of the workspace in terms of the associated entities so be careful when trying to update these entities.\n\nFor eg. if your workspace has collections A and B, and in the update call, you send C's uid in the collections array, then A and B would be removed from the workspace and C would be added."
							},
							"response": [
								{
									"id": "4f726519-6474-4078-826c-e450133b705f",
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"workspace\": {\n    \"collections\": [\n      {\n        \"id\": \"e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\",\n        \"name\": \"Straw hats\",\n        \"uid\": \"8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\"\n      }\n    ],\n    \"description\": \"Some description\",\n    \"environments\": [\n      {\n        \"id\": \"83a1aaa2-a204-4bd8-9b92-4d486918906b\",\n        \"name\": \"env\",\n        \"uid\": \"8154-83a1aaa2-a204-4bd8-9b92-4d486918906b\"\n      }\n    ],\n    \"mocks\": [\n      {\n        \"id\": \"cda672ef-1375-40e9-baee-e20ece8d7b65\"\n      }\n    ],\n    \"monitors\": [\n      {\n        \"id\": \"1e889bd2-3862-4be0-b2c2-9b1fe9673aec\"\n      }\n    ],\n    \"name\": \"New Workspace updated\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/workspaces/:workspace_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workspaces",
												":workspace_id"
											],
											"variable": [
												{
													"key": "workspace_id",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"workspace\": {\n    \"id\": \"cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f\",\n    \"name\": \"New Workspace\"\n  }\n}"
								},
								{
									"id": "2b44800c-f763-4279-9553-fd2d6675f858",
									"name": "Not enough permissions",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"workspace\": {\n    \"collections\": [\n      {\n        \"id\": \"e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\",\n        \"name\": \"Straw hats\",\n        \"uid\": \"8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\"\n      }\n    ],\n    \"description\": \"Some description\",\n    \"environments\": [\n      {\n        \"id\": \"83a1aaa2-a204-4bd8-9b92-4d486918906b\",\n        \"name\": \"env\",\n        \"uid\": \"8154-83a1aaa2-a204-4bd8-9b92-4d486918906b\"\n      }\n    ],\n    \"mocks\": [\n      {\n        \"id\": \"cda672ef-1375-40e9-baee-e20ece8d7b65\"\n      }\n    ],\n    \"monitors\": [\n      {\n        \"id\": \"1e889bd2-3862-4be0-b2c2-9b1fe9673aec\"\n      }\n    ],\n    \"name\": \"New Workspace updated\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/workspaces/:workspace_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workspaces",
												":workspace_id"
											],
											"variable": [
												{
													"key": "workspace_id",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"message\": \"You do not have access to update this workspace.\",\n    \"name\": \"forbiddenError\"\n  }\n}"
								},
								{
									"id": "508ec64d-0f9f-4abe-97bf-28cfb3c2d4bc",
									"name": "Specified workspace/entities do not exist",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"workspace\": {\n    \"collections\": [\n      {\n        \"id\": \"e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\",\n        \"name\": \"Straw hats\",\n        \"uid\": \"8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\"\n      }\n    ],\n    \"description\": \"Some description\",\n    \"environments\": [\n      {\n        \"id\": \"83a1aaa2-a204-4bd8-9b92-4d486918906b\",\n        \"name\": \"env\",\n        \"uid\": \"8154-83a1aaa2-a204-4bd8-9b92-4d486918906b\"\n      }\n    ],\n    \"mocks\": [\n      {\n        \"id\": \"cda672ef-1375-40e9-baee-e20ece8d7b65\"\n      }\n    ],\n    \"monitors\": [\n      {\n        \"id\": \"1e889bd2-3862-4be0-b2c2-9b1fe9673aec\"\n      }\n    ],\n    \"name\": \"New Workspace updated\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/workspaces/:workspace_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workspaces",
												":workspace_id"
											],
											"variable": [
												{
													"key": "workspace_id",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"message\": \"The specified workspace does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}"
								}
							]
						},
						{
							"name": "Delete Workspace",
							"id": "d03e06e1-0a5c-448a-9985-fd051ac1220a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workspaces/:workspace_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces",
										":workspace_id"
									],
									"variable": [
										{
											"key": "workspace_id",
											"value": "cillum tempor irure deserunt mo",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint allows you to delete an existing workspace.\n\nOn successful deletion of the workspace, the response returns the `id`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
							},
							"response": [
								{
									"id": "c1b9c61e-690a-4bca-b293-1f020acaa0b1",
									"name": "Successful Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/workspaces/:workspace_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workspaces",
												":workspace_id"
											],
											"variable": [
												{
													"key": "workspace_id",
													"value": "cillum tempor irure deserunt mo",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"workspace\": {\n    \"id\": \"{{workspace_id}}\"\n  }\n}"
								}
							]
						}
					],
					"id": "43b5ebc1-6ca8-4a6f-bec0-c9f8165986c4"
				},
				{
					"name": "All workspaces",
					"id": "a0764670-459c-4df1-a4a5-23c47ccc367e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workspaces",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workspaces"
							]
						},
						"description": "The `/workspaces` endpoint returns a list of all [workspaces](https://www.getpostman.com/docs/v6/postman/workspaces/intro_to_workspaces) that is accessible by you. The list includes your own workspaces and the workspaces that you have access to.\n\nThe response contains an array of collection information containing the `name`, `id`, and `type` of each workspace.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
					},
					"response": [
						{
							"id": "bdc86ab8-118a-46b8-b36c-69bb3abe0e58",
							"name": "Valid Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workspaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"workspaces\": [\n    {\n      \"id\": \"4e6d34c2-cfdb-4b33-8868-12a875bebda3\",\n      \"name\": \"My Workspace\",\n      \"type\": \"personal\"\n    },\n    {\n      \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n      \"name\": \"Team workspace\",\n      \"type\": \"team\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Workspace",
					"id": "54ea587c-7754-4a66-81bf-a49d37cb8aac",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"workspace\": {\n    \"collections\": [\n      {\n        \"id\": \"e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\",\n        \"name\": \"Straw hats\",\n        \"uid\": \"8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\"\n      }\n    ],\n    \"description\": \"Some description\",\n    \"environments\": [\n      {\n        \"id\": \"83a1aaa2-a204-4bd8-9b92-4d486918906b\",\n        \"name\": \"env\",\n        \"uid\": \"8154-83a1aaa2-a204-4bd8-9b92-4d486918906b\"\n      }\n    ],\n    \"mocks\": [\n      {\n        \"id\": \"cda672ef-1375-40e9-baee-e20ece8d7b65\"\n      }\n    ],\n    \"monitors\": [\n      {\n        \"id\": \"1e889bd2-3862-4be0-b2c2-9b1fe9673aec\"\n      }\n    ],\n    \"name\": \"New Workspace\",\n    \"type\": \"personal\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/workspaces",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workspaces"
							]
						},
						"description": "This endpoint allows you to create a workspace and populate it with entities like `collections`, `environments`, `mocks` and `monitors` using their `uid`.\n\nOn successful creation of the workspace, the response returns the workspcae `name` and `id`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
					},
					"response": [
						{
							"id": "cd7e6ff2-d1b8-4cd1-9518-e85f2b344608",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workspace\": {\n    \"collections\": [\n      {\n        \"id\": \"e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\",\n        \"name\": \"Straw hats\",\n        \"uid\": \"8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\"\n      }\n    ],\n    \"description\": \"Some description\",\n    \"environments\": [\n      {\n        \"id\": \"83a1aaa2-a204-4bd8-9b92-4d486918906b\",\n        \"name\": \"env\",\n        \"uid\": \"8154-83a1aaa2-a204-4bd8-9b92-4d486918906b\"\n      }\n    ],\n    \"mocks\": [\n      {\n        \"id\": \"cda672ef-1375-40e9-baee-e20ece8d7b65\"\n      }\n    ],\n    \"monitors\": [\n      {\n        \"id\": \"1e889bd2-3862-4be0-b2c2-9b1fe9673aec\"\n      }\n    ],\n    \"name\": \"New Workspace\",\n    \"type\": \"personal\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workspaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"workspace\": {\n    \"id\": \"cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f\",\n    \"name\": \"New Workspace\"\n  }\n}"
						},
						{
							"id": "6a7b1647-2b8e-4d68-b8f8-0f630d0a6865",
							"name": "Instance supplied not found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workspace\": {\n    \"collections\": [\n      {\n        \"id\": \"e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\",\n        \"name\": \"Straw hats\",\n        \"uid\": \"8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\"\n      }\n    ],\n    \"description\": \"Some description\",\n    \"environments\": [\n      {\n        \"id\": \"83a1aaa2-a204-4bd8-9b92-4d486918906b\",\n        \"name\": \"env\",\n        \"uid\": \"8154-83a1aaa2-a204-4bd8-9b92-4d486918906b\"\n      }\n    ],\n    \"mocks\": [\n      {\n        \"id\": \"cda672ef-1375-40e9-baee-e20ece8d7b65\"\n      }\n    ],\n    \"monitors\": [\n      {\n        \"id\": \"1e889bd2-3862-4be0-b2c2-9b1fe9673aec\"\n      }\n    ],\n    \"name\": \"New Workspace\",\n    \"type\": \"personal\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workspaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workspaces"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"message\": \"Instance not found in the database.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}"
						}
					]
				}
			],
			"id": "dd9d058c-95b0-483f-92d5-fad6a723acd6"
		},
		{
			"name": "API Key Owner",
			"id": "28c0c952-669a-4712-a388-ec9d33303956",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/me",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"me"
					]
				},
				"description": "the `/me` Postman API endpoint lets you access information about the authenticated user. You can retrieve the authenticated user's username, full name, e-mail address, and any other available information.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter."
			},
			"response": [
				{
					"id": "ac930fe5-3b3e-4308-ba3c-3885c50c19d0",
					"name": "Valid Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"operations\": [\n    {\n      \"limit\": 1000000,\n      \"name\": \"mock_usage\",\n      \"overage\": 0,\n      \"usage\": 2382\n    },\n    {\n      \"limit\": 10000000,\n      \"name\": \"monitor_request_runs\",\n      \"overage\": 0,\n      \"usage\": 49492\n    },\n    {\n      \"limit\": 5000000,\n      \"name\": \"documenter_public_views\",\n      \"overage\": 0,\n      \"usage\": 120232\n    },\n    {\n      \"limit\": 1000000,\n      \"name\": \"api_usage\",\n      \"overage\": 0,\n      \"usage\": 1345\n    },\n    {\n      \"limit\": 25,\n      \"name\": \"custom_domains\",\n      \"overage\": 0,\n      \"usage\": 1\n    },\n    {\n      \"limit\": 1,\n      \"name\": \"custom_authentication_methods\",\n      \"overage\": 0,\n      \"usage\": 1\n    },\n    {\n      \"limit\": 10000,\n      \"name\": \"serverless_requests\",\n      \"overage\": 0,\n      \"usage\": 0\n    },\n    {\n      \"limit\": 5000,\n      \"name\": \"integrations\",\n      \"overage\": 0,\n      \"usage\": 145\n    },\n    {\n      \"limit\": 1000000,\n      \"name\": \"cloud_agent_requests\",\n      \"overage\": 0,\n      \"usage\": 23823\n    }\n  ],\n  \"user\": {\n    \"avatar\": \"https://www.gravatar.com/avatar/e1f3994f2632af3d1c8c2dcc168a10e6\",\n    \"email\": \"janedoe@example.com\",\n    \"fullName\": \"Jane Doe\",\n    \"id\": \"631643\",\n    \"isPublic\": false,\n    \"username\": \"janedoe\"\n  }\n}"
				}
			]
		},
		{
			"name": "Schema Security Validation",
			"id": "1853ace2-1a1b-467a-82dc-343dbd8c7986",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"schema\": {\n    \"language\": \"json\",\n    \"schema\": \"{\\\"openapi\\\":\\\"3.0.0\\\",\\\"info\\\":{\\\"version\\\":\\\"1\\\",\\\"title\\\":\\\"temp\\\",\\\"license\\\":{\\\"name\\\":\\\"MIT\\\"}},\\\"servers\\\":[{\\\"url\\\":\\\"https://petstore.swagger.io/v1\\\"}],\\\"paths\\\":{\\\"/user\\\":{\\\"get\\\":{\\\"summary\\\":\\\"Details about a user\\\",\\\"operationId\\\":\\\"listUser\\\",\\\"tags\\\":[\\\"user\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"id\\\",\\\"in\\\":\\\"query\\\",\\\"description\\\":\\\"ID of the user\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"}}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"Details about a user\\\",\\\"headers\\\":{\\\"x-next\\\":{\\\"description\\\":\\\"A link to the next page of responses\\\",\\\"schema\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"content\\\":{\\\"application/json\\\":{\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/User\\\"}}}},\\\"default\\\":{\\\"description\\\":\\\"unexpected error\\\",\\\"content\\\":{\\\"application/json\\\":{\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/Error\\\"}}}}}}}},\\\"components\\\":{\\\"schemas\\\":{\\\"User\\\":{\\\"type\\\":\\\"object\\\",\\\"required\\\":[\\\"id\\\",\\\"name\\\"],\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"tag\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"Error\\\":{\\\"type\\\":\\\"object\\\",\\\"required\\\":[\\\"code\\\",\\\"message\\\"],\\\"properties\\\":{\\\"code\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\"}}}},\\\"securitySchemes\\\":{\\\"BasicAuth\\\":{\\\"type\\\":\\\"http\\\",\\\"scheme\\\":\\\"basic\\\"}}},\\\"security\\\":[{\\\"BasicAuth\\\":[]}]}\",\n    \"type\": \"openapi3\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/security/api-validation",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"security",
						"api-validation"
					]
				},
				"description": "This endpoint will perform **static analysis** on the **Schema specification**. It will return the security misses in your schema definition and help you understand their implications and possible ways to patch the warnings. You can introduce this endpoint to your CI/CD process to automate your schema validation.\n\n**Request Body**(max size 10MB)</br>\n\n| Key | Value Type | Required | Description |\n| ---- |----| --- | ---- |\n| type | Enum(openapi3, openapi2) | Yes | Type of Schema Specification |\n| language | Enum(json, yaml) | Yes | Format of Schema Specification |\n| schema | String | Yes | Stringified Schema Body|\n\nVisit [Learning Center](https://learning.postman-beta.com/docs/api-security/security-warnings/security-warnings-overview) for more information"
			},
			"response": [
				{
					"id": "2ed3739e-e236-48fc-a3c5-0de01b827bcf",
					"name": "No Warnings Found",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"schema\": {\n    \"language\": \"json\",\n    \"schema\": \"{\\\"openapi\\\":\\\"3.0.0\\\",\\\"info\\\":{\\\"version\\\":\\\"1\\\",\\\"title\\\":\\\"temp\\\",\\\"license\\\":{\\\"name\\\":\\\"MIT\\\"}},\\\"servers\\\":[{\\\"url\\\":\\\"https://petstore.swagger.io/v1\\\"}],\\\"paths\\\":{\\\"/user\\\":{\\\"get\\\":{\\\"summary\\\":\\\"Details about a user\\\",\\\"operationId\\\":\\\"listUser\\\",\\\"tags\\\":[\\\"user\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"id\\\",\\\"in\\\":\\\"query\\\",\\\"description\\\":\\\"ID of the user\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"}}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"Details about a user\\\",\\\"headers\\\":{\\\"x-next\\\":{\\\"description\\\":\\\"A link to the next page of responses\\\",\\\"schema\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"content\\\":{\\\"application/json\\\":{\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/User\\\"}}}},\\\"default\\\":{\\\"description\\\":\\\"unexpected error\\\",\\\"content\\\":{\\\"application/json\\\":{\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/Error\\\"}}}}}}}},\\\"components\\\":{\\\"schemas\\\":{\\\"User\\\":{\\\"type\\\":\\\"object\\\",\\\"required\\\":[\\\"id\\\",\\\"name\\\"],\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"tag\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"Error\\\":{\\\"type\\\":\\\"object\\\",\\\"required\\\":[\\\"code\\\",\\\"message\\\"],\\\"properties\\\":{\\\"code\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\"}}}},\\\"securitySchemes\\\":{\\\"BasicAuth\\\":{\\\"type\\\":\\\"http\\\",\\\"scheme\\\":\\\"basic\\\"}}},\\\"security\\\":[{\\\"BasicAuth\\\":[]}]}\",\n    \"type\": \"openapi3\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/security/api-validation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"security",
								"api-validation"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"disabled": false,
							"key": "Access-Control-Allow-Origin",
							"value": "*",
							"description": ""
						},
						{
							"disabled": false,
							"key": "Connection",
							"value": "keep-alive",
							"description": ""
						},
						{
							"disabled": false,
							"key": "Content-Length",
							"value": "15",
							"description": ""
						},
						{
							"disabled": false,
							"key": "Date",
							"value": "Sun, 12 Sep 2021 09:44:49 GMT",
							"description": ""
						},
						{
							"disabled": false,
							"key": "ETag",
							"value": "W/\"f-qOnA/C9SOc9LcVJFceEQk4jhluk\"",
							"description": ""
						},
						{
							"disabled": false,
							"key": "Server",
							"value": "nginx",
							"description": ""
						},
						{
							"disabled": false,
							"key": "Vary",
							"value": "Accept-Encoding",
							"description": ""
						},
						{
							"disabled": false,
							"key": "X-RateLimit-Limit",
							"value": "60",
							"description": ""
						},
						{
							"disabled": false,
							"key": "X-RateLimit-Remaining",
							"value": "59",
							"description": ""
						},
						{
							"disabled": false,
							"key": "X-RateLimit-Reset",
							"value": "1631439948",
							"description": ""
						},
						{
							"disabled": false,
							"key": "x-frame-options",
							"value": "SAMEORIGIN",
							"description": ""
						},
						{
							"disabled": false,
							"key": "x-srv-span",
							"value": "v=1;s=6da9fbb5ccd53a5e",
							"description": ""
						},
						{
							"disabled": false,
							"key": "x-srv-trace",
							"value": "v=1;t=ae1633478c228dbd",
							"description": ""
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"warnings\": []\n}"
				},
				{
					"id": "56b5580a-5804-4d46-b204-4ff108bcbae6",
					"name": "Payload Too Large",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"schema\": {\n    \"language\": \"json\",\n    \"schema\": \"{\\\"openapi\\\":\\\"3.0.0\\\",\\\"info\\\":{\\\"version\\\":\\\"1\\\",\\\"title\\\":\\\"temp\\\",\\\"license\\\":{\\\"name\\\":\\\"MIT\\\"}},\\\"servers\\\":[{\\\"url\\\":\\\"https://petstore.swagger.io/v1\\\"}],\\\"paths\\\":{\\\"/user\\\":{\\\"get\\\":{\\\"summary\\\":\\\"Details about a user\\\",\\\"operationId\\\":\\\"listUser\\\",\\\"tags\\\":[\\\"user\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"id\\\",\\\"in\\\":\\\"query\\\",\\\"description\\\":\\\"ID of the user\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"}}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"Details about a user\\\",\\\"headers\\\":{\\\"x-next\\\":{\\\"description\\\":\\\"A link to the next page of responses\\\",\\\"schema\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"content\\\":{\\\"application/json\\\":{\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/User\\\"}}}},\\\"default\\\":{\\\"description\\\":\\\"unexpected error\\\",\\\"content\\\":{\\\"application/json\\\":{\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/Error\\\"}}}}}}}},\\\"components\\\":{\\\"schemas\\\":{\\\"User\\\":{\\\"type\\\":\\\"object\\\",\\\"required\\\":[\\\"id\\\",\\\"name\\\"],\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"tag\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"Error\\\":{\\\"type\\\":\\\"object\\\",\\\"required\\\":[\\\"code\\\",\\\"message\\\"],\\\"properties\\\":{\\\"code\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\"}}}},\\\"securitySchemes\\\":{\\\"BasicAuth\\\":{\\\"type\\\":\\\"http\\\",\\\"scheme\\\":\\\"basic\\\"}}},\\\"security\\\":[{\\\"BasicAuth\\\":[]}]}\",\n    \"type\": \"openapi3\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/security/api-validation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"security",
								"api-validation"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"disabled": false,
							"key": "Connection",
							"value": "keep-alive",
							"description": ""
						},
						{
							"disabled": false,
							"key": "Content-Length",
							"value": "78",
							"description": ""
						},
						{
							"disabled": false,
							"key": "Date",
							"value": "Sun, 12 Sep 2021 09:42:51 GMT",
							"description": ""
						},
						{
							"disabled": false,
							"key": "ETag",
							"value": "W/\"4e-E4wtB3VEF/jim4+F3i6dVca260E\"",
							"description": ""
						},
						{
							"disabled": false,
							"key": "Server",
							"value": "nginx",
							"description": ""
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": {\n    \"message\": \"request entity too large\",\n    \"name\": \"PayloadTooLargeError\"\n  }\n}"
				}
			]
		},
		{
			"name": "Create Webhook",
			"id": "45ca1a62-e37c-4d33-829f-4f9da60d7104",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"webhook\": {\n    \"collection\": \"{{collection_uid}}\",\n    \"name\": \"{{webhook_name}}\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/webhooks?workspace={{workspace_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"webhooks"
					],
					"query": [
						{
							"key": "workspace",
							"value": "{{workspace_id}}"
						}
					]
				},
				"description": "Create a webhook that triggers a collection with your custom payload.\n\nYou can specify the webhook name and the collection to trigger by using the following attributes of the `webhook` object on your JSON body:\n\n* `name`: the name of the webhook that you're creating.\n* `collection`: the UID of the collection that you want to trigger once this webhook is called.\n\nOnce created, the webhook URL can be retrieved by accessing the `webhookUrl` attribute of the `webhook` object on the response JSON payload."
			},
			"response": [
				{
					"id": "41610e75-4640-4823-91b2-5f80442f9068",
					"name": "Untitled Example",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"webhook\": {\n    \"collection\": \"{{collection_uid}}\",\n    \"name\": \"{{webhook_name}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks?workspace={{workspace_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspace_id}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "get all integrations",
			"id": "8fa4552d-6f44-4b1d-bd2a-84cf7fd20936",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "/integrations",
					"path": [
						"integrations"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"id": "bf6b54dc-1556-43db-8444-516de5a9048b",
			"key": "baseUrl",
			"value": "https://api.getpostman.com",
			"type": "string"
		}
	]
}